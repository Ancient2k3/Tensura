-- Blox Fruits: HoangHienXScript/Auto Chest v2 --
local _ws, _plrs, _rs, _ts, _stg = game:GetService("Workspace"), game:GetService("Players"), game:GetService("RunService"), game:GetService("TweenService"), game:GetService("StarterGui")
local _chestmodels, _map = _ws:WaitForChild("ChestModels"), _ws:WaitForChild("Map")
local _modelsnamed = {"SilverChest", "GoldChest", "DiamondChest"}
local _self = _plrs.LocalPlayer
local _blacklistedmaps = {}

function _find_part(m)
    if m.PrimaryPart then return m.PrimaryPart end
    for nothing, part in ipairs(m:GetDescendants()) do
        if part:IsA("Part") or part:IsA("MeshPart") then
            return part
        end
    end
    return nil
end

function _expected_distance(p1, m)
    local part = _find_part(m)
    if not part then return math.huge end
    return (p1.Position - part.Position).magnitude
end

function _targetsort(t)
    table.sort(t, function(p1, p2)
        return _expected_distance(_self.Character.HumanoidRootPart, p1) < _expected_distance(_self.Character.HumanoidRootPart, p2)
    end)
end

function _get_chests()
    local chests = {}
    for beli, chest in pairs(_chestmodels:GetChildren()) do
        if chest:IsA("Model") and table.find(_modelsnamed, chest.Name) and _find_part(chest) then
            table.insert(chests, chest)
        end
    end
    _targetsort(chests)
    return chests
end

function _get_maps()
    local maps = {}
    for crates, map in pairs(_map:GetChildren()) do
        if map:IsA("Model") and not table.find(_blacklistedmaps, map) and _find_part(map) then
            table.insert(maps, map)
        end
    end
    _targetsort(maps)
    return maps
end

function _tween_to(m, y_axis)
    local part = _find_part(m)
    if not part then return end
    if tween then tween:Cancel() end
    local distance = (_self.Character.HumanoidRootPart.Position - part.Position + Vector3.new(0, y_axis or 1.5, 0)).magnitude
    local tween = _ts:Create(_self.Character.HumanoidRootPart, TweenInfo.new(distance / 250, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0), {CFrame = CFrame.new(part.Position + Vector3.new(0, y_axis or 1.5, 0))})
    tween:Play()
    tween.Completed:Wait()
end

function _bv(pr)
    if not _self.Character.HumanoidRootPart:FindFirstChild("Extra_Wings_IX") then
        local safety = Instance.new("BodyVelocity", pr)
        safety.Name = "Extra_Wings_IX"
        safety.Velocity = Vector3.new(0, 0, 0)
        safety.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    else
        _self.Character.HumanoidRootPart:FindFirstChild("Extra_Wings_IX"):Destroy()
    end
end

function _nocliped(bl)
    for nothing, noclip_part in pairs(_self.Character:GetDescendants()) do
        if noclip_part:IsA("BasePart") then
            noclip_part.CanCollide = bl
        end
    end
end

function _notify(msg)
    _stg:SetCore("SendNotification", {Title = "Auto/Farming Chest v2.0", Text = msg, Duration = 2.5,})
end

local _looping = false
local _conn

_bv(_self.Character.HumanoidRootPart)
_nocliped(false)
if _G.AutoFarmChest_InitRun and _G.AutoFarmChest_InitRun == "already_onec" then
    _notify("Re-Started, Create by HoangHienXScripts!")
else
    _notify("Started, Create by HoangHienXScripts!")
end
_conn = _rs.RenderStepped:Connect(function()
    if _looping then return end
    _looping = true

    if not _self.Character or not _self.Character:FindFirstChild("HumanoidRootPart") or not _self.Character:FindFirstChild("Humanoid") or _self.Character.Humanoid.Health <= 0 then
        _conn:Disconnect()
        return
    end

    local chests = _get_chests()
    if #chests > 0 then
        for _, chest in ipairs(chests) do
            if not _self.Character or not _self.Character:FindFirstChild("HumanoidRootPart") or not _self.Character:FindFirstChild("Humanoid") or _self.Character.Humanoid.Health <= 0 then
                _conn:Disconnect()
                return
            end
            _tween_to(chest, 1.5)
        end
    end

    local maps = _get_maps()
    if #maps == 0 then
        _conn:Disconnect()
        return
    end

    local nextmap = maps[1]
    _tween_to(nextmap, 100)
    table.insert(_blacklistedmaps, nextmap)

    _looping = false
end)

_self.CharacterAdded:Once(function()
    _conn:Disconnect()
    _G.AutoFarmChest_InitRun = "already_onec"
    _notify("Completely Disabled!")
end)
