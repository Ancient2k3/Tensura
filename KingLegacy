-- Welcome to HVH King Legacy Script --
-- Firstly here is a script to remove pre-existing gui --
local player = game.Players.LocalPlayer
local DestroySG = "KingLegacy_UIENG"

for _, gui in ipairs(player:WaitForChild("PlayerGui"):GetChildren()) do
    if gui:IsA("ScreenGui") and gui.Name == DestroySG then
        gui:Destroy()
    end
end
-- X --

local Pro_KingLegacySG = Instance.new("ScreenGui")
Pro_KingLegacySG.Parent = game.CoreGui
Pro_KingLegacySG.Name = "KingLegacy_UIENG"

local SPECIFICS_FONT = Enum.Font.Code

local Tatsumaki = Instance.new("TextButton")
local Tatsumaki_D = Instance.new("ScrollingFrame")

-- X --

Tatsumaki.Parent = Pro_KingLegacySG
Tatsumaki.BackgroundColor3 = Color3.new(0, 0, 0)
Tatsumaki.BackgroundTransparency = 0.5
Tatsumaki.Size = UDim2.new(0.05, 0, 0.1, 0)
Tatsumaki.TextScaled = true
Tatsumaki.Position = UDim2.new(0.84, 0, -0.1, 0)
Tatsumaki.TextColor3 = Color3.new(1, 1, 1)
Tatsumaki.Font = SPECIFICS_FONT
Tatsumaki.Text = "+"

local TatsumakiCorner = Instance.new("UICorner")
TatsumakiCorner.Parent = Tatsumaki
TatsumakiCorner.CornerRadius = UDim.new(0, 10)

Tatsumaki_D.Parent = Pro_KingLegacySG
Tatsumaki_D.Size = UDim2.new(0.3, 0, 0.1, 0)
Tatsumaki_D.Position = UDim2.new(1.2, 0, 0.28, 0)
Tatsumaki_D.BackgroundColor3 = Color3.new(0, 0, 0)
Tatsumaki_D.BackgroundTransparency = 0.5
Tatsumaki_D.CanvasSize = UDim2.new(2, 0, 0, 0)
Tatsumaki_D.ScrollBarThickness = 0.1

local Tatsumaki_DCorner = Instance.new("UICorner")
Tatsumaki_DCorner.Parent = Tatsumaki_D
Tatsumaki_DCorner.CornerRadius = UDim.new(0.2, 0)

local TweenService = game:GetService("TweenService")
local tweenSpeedd = 1  -- Duration in seconds
local tweenInfo = TweenInfo.new(tweenSpeedd, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

local goalPosition1 = UDim2.new(0.6, 0, 0.28, 0)  -- Move Tatsumaki_D
local goalPosition2 = UDim2.new(1.2, 0, 0.28, 0)  -- Original position

local tween1 = TweenService:Create(Tatsumaki_D, tweenInfo, {Position = goalPosition1})
local tween2 = TweenService:Create(Tatsumaki_D, tweenInfo, {Position = goalPosition2})

local isToggled = false
Tatsumaki.MouseButton1Click:Connect(function()
    if isToggled then
        tween2:Play()
        Tatsumaki.Text = "Ã—"
        Tatsumaki.TextColor3 = Color3.new(1, 0, 0)
    else
        tween1:Play()
        Tatsumaki.Text = "+"
        Tatsumaki.TextColor3 = Color3.new(1, 1, 1)
    end
    isToggled = not isToggled
end)

-- For Button Inside Tatsumaki_D(ScrollingFrame) --
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- X --
local MainScript = Instance.new("TextButton")
MainScript.Parent = Tatsumaki_D
MainScript.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainScript.BackgroundTransparency = 0.5
MainScript.Size = UDim2.new(0.03, 0, 0.9, 0)
MainScript.Position = UDim2.new(0.005, 0, 0, 0)
MainScript.TextScaled = true
MainScript.TextColor3 = Color3.fromRGB(255, 255, 255)
MainScript.Font = SPECIFICS_FONT
MainScript.Text = "[Main]"
MainScript.Visible = true

local FarmerScript = Instance.new("TextButton")
FarmerScript.Parent = Tatsumaki_D
FarmerScript.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
FarmerScript.BackgroundTransparency = 0.5
FarmerScript.Size = UDim2.new(0.03, 0, 0.9, 0)
FarmerScript.Position = UDim2.new(0.045, 0, 0, 0)
FarmerScript.TextScaled = true
FarmerScript.TextColor3 = Color3.fromRGB(255, 255, 255)
FarmerScript.Font = SPECIFICS_FONT
FarmerScript.Text = "[Farm]"
FarmerScript.Visible = true

local MiscScript = Instance.new("TextButton")
MiscScript.Parent = Tatsumaki_D
MiscScript.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MiscScript.BackgroundTransparency = 0.5
MiscScript.Size = UDim2.new(0.03, 0, 0.9, 0)
MiscScript.Position = UDim2.new(0.085, 0, 0, 0)
MiscScript.TextScaled = true
MiscScript.TextColor3 = Color3.fromRGB(255, 255, 255)
MiscScript.Font = SPECIFICS_FONT
MiscScript.Text = "[Misc]"
MiscScript.Visible = true


-- X --
local D_Main = Instance.new("ScrollingFrame")
local D_Misc = Instance.new("ScrollingFrame")
local D_Farmer = Instance.new("ScrollingFrame")

-- X --
D_Main.Parent = Pro_KingLegacySG
D_Main.Size = UDim2.new(0.1, 0, 0.2, 0)
D_Main.Position = UDim2.new(-1, 0, 0.2, 0)
D_Main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
D_Main.BackgroundTransparency = 0.5
D_Main.CanvasSize = UDim2.new(0, 0, 2, 0)
D_Main.ScrollBarThickness = 0.1

D_Misc.Parent = Pro_KingLegacySG
D_Misc.Size = UDim2.new(0.1, 0, 0.2, 0)
D_Misc.Position = UDim2.new(-1, 0, 0.2, 0)
D_Misc.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
D_Misc.BackgroundTransparency = 0.5
D_Misc.CanvasSize = UDim2.new(0, 0, 2, 0)
D_Misc.ScrollBarThickness = 0.1

D_Farmer.Parent = Pro_KingLegacySG
D_Farmer.Size = UDim2.new(0.1, 0, 0.2, 0)
D_Farmer.Position = UDim2.new(-1, 0, 0.2, 0)
D_Farmer.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
D_Farmer.BackgroundTransparency = 0.5
D_Farmer.CanvasSize = UDim2.new(0, 0, 2, 0)
D_Farmer.ScrollBarThickness = 0.1

-- X --
local GP_Main = UDim2.new(0, 0, 0.2, 0)
local DefaultP_Main = UDim2.new(-1, 0, 0.2, 0)
local GP_Farmer = UDim2.new(0.1, 0, 0.2, 0)
local GP_Misc = UDim2.new(0.2, 0, 0.4, 0)

-- X --
local TStart_GP_Main = TweenService:Create(D_Main, tweenInfo, {Position = GP_Main})
local TStart_Default_Main = TweenService:Create(D_Main, tweenInfo, {Position = DefaultP_Main})
local TStart_GP_Misc = TweenService:Create(D_Misc, tweenInfo, {Position = GP_Misc})
local TStart_Default_Misc = TweenService:Create(D_Misc, tweenInfo, {Position = DefaultP_Main})
local TStart_GP_Farmer = TweenService:Create(D_Farmer, tweenInfo, {Position = GP_Farmer})
local TStart_Default_Farmer = TweenService:Create(D_Farmer, tweenInfo, {Position = DefaultP_Main})

-- X --
local TheChosenOne = false
MainScript.MouseButton1Click:Connect(function()
    if TheChosenOne then
        MainScript.TextColor3 = Color3.fromRGB(255, 255, 255)
        TStart_Default_Main:Play()
        TheChosenOne = false
    else
        MainScript.TextColor3 = Color3.fromRGB(0, 255, 255)
        TStart_GP_Main:Play()
        TheChosenOne = true
    end
end)

local TheChosenOne_I = false
FarmerScript.MouseButton1Click:Connect(function()
    if TheChosenOne_I then
        FarmerScript.TextColor3 = Color3.fromRGB(255, 255, 255)
        TStart_Default_Farmer:Play()
        TheChosenOne_I = false
    else
        FarmerScript.TextColor3 = Color3.fromRGB(0, 255, 255)
        TStart_GP_Farmer:Play()
        TheChosenOne_I = true
    end
end)

local TheChosenOne_II = false
MiscScript.MouseButton1Click:Connect(function()
    if TheChosenOne_II then
        MiscScript.TextColor3 = Color3.fromRGB(255, 255, 255)
        TStart_Default_Misc:Play()
        TheChosenOne_II = false
    else
        MiscScript.TextColor3 = Color3.fromRGB(0, 255, 255)
        TStart_GP_Misc:Play()
        TheChosenOne_II = true
    end
end)

-- X --
-- Fruits Skills Config --
local DF_Use_M1 = false
local DF_Use_Z = false
local DF_Use_X = false
local DF_Use_C = false
local DF_Use_V = false
local DF_Use_E = false
local DF_Use_B = false
local DF_Use_F = false

-- Swords Skills Config --
local SW_Use_M1 = false
local SW_Use_Z = false
local SW_Use_X = false

-- FightingStyles Skills Config --
local FS_Use_M1 = false
local FS_Use_Z = false
local FS_Use_X = false
local FS_Use_C = false
local FS_Use_V = false
local FS_Use_E = false

-- MainConfigs Frame --
local Configs_Frame = Instance.new("Frame")
Configs_Frame.Parent = Pro_KingLegacySG
Configs_Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Configs_Frame.BackgroundTransparency = 0.5
Configs_Frame.Size = UDim2.new(0.35, 0, 0.2, 0)
Configs_Frame.Position = UDim2.new(0.35, 0, -0.15, 0)
Configs_Frame.Active = true
Configs_Frame.Draggable = false
Configs_Frame.Visible = false

local Configs_FruitsLabel = Instance.new("TextLabel")
Configs_FruitsLabel.Parent = Configs_Frame
Configs_FruitsLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Configs_FruitsLabel.BackgroundTransparency = 0.5
Configs_FruitsLabel.Size = UDim2.new(1, 0, 0.15, 0)
Configs_FruitsLabel.Position = UDim2.new(0, 0, 0, 0)
Configs_FruitsLabel.TextScaled = true
Configs_FruitsLabel.TextColor3 = Color3.fromRGB(255, 0, 200)
Configs_FruitsLabel.Font = SPECIFICS_FONT
Configs_FruitsLabel.Text = "Fruits Ability [Enable/Disable]"
Configs_FruitsLabel.Visible = true

local Configs_SwordsLabel = Instance.new("TextLabel")
Configs_SwordsLabel.Parent = Configs_Frame
Configs_SwordsLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Configs_SwordsLabel.BackgroundTransparency = 0.5
Configs_SwordsLabel.Size = UDim2.new(0.4, 0, 0.15, 0)
Configs_SwordsLabel.Position = UDim2.new(0, 0, 0.5, 0)
Configs_SwordsLabel.TextScaled = true
Configs_SwordsLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
Configs_SwordsLabel.Font = SPECIFICS_FONT
Configs_SwordsLabel.Text = "Swords Ability [Enable/Disable]"
Configs_SwordsLabel.Visible = true

local Configs_FightingStylesLabel = Instance.new("TextLabel")
Configs_FightingStylesLabel.Parent = Configs_Frame
Configs_FightingStylesLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Configs_FightingStylesLabel.BackgroundTransparency = 0.5
Configs_FightingStylesLabel.Size = UDim2.new(0.55, 0, 0.15, 0)
Configs_FightingStylesLabel.Position = UDim2.new(0.45, 0, 0.5, 0)
Configs_FightingStylesLabel.TextScaled = true
Configs_FightingStylesLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
Configs_FightingStylesLabel.Font = SPECIFICS_FONT
Configs_FightingStylesLabel.Text = "FightingStyles Ability [Enable/Disable]"
Configs_FightingStylesLabel.Visible = true

local Configs_FencesLabel = Instance.new("TextLabel")
Configs_FencesLabel.Parent = Configs_Frame
Configs_FencesLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Configs_FencesLabel.BackgroundTransparency = 0.5
Configs_FencesLabel.Size = UDim2.new(0.039, 0, 0.5, 0)
Configs_FencesLabel.Position = UDim2.new(0.405, 0, 0.5, 0)
Configs_FencesLabel.TextScaled = true
Configs_FencesLabel.TextColor3 = Color3.fromRGB(255, 0, 200)
Configs_FencesLabel.Font = SPECIFICS_FONT
Configs_FencesLabel.Text = ""
Configs_FencesLabel.Visible = true

-- Button Changed Statement --
-- FRUIT CONFIGS --
local M1_FruitsC = Instance.new("TextButton")
M1_FruitsC.Parent = Configs_Frame
M1_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
M1_FruitsC.BackgroundTransparency = 0.5
M1_FruitsC.Size = UDim2.new(0.1, 0, 0.28, 0)
M1_FruitsC.Position = UDim2.new(0.010, 0, 0.189, 0)
M1_FruitsC.TextScaled = true
M1_FruitsC.TextColor3 = Color3.fromRGB(255, 255, 255)
M1_FruitsC.Font = SPECIFICS_FONT
M1_FruitsC.Text = "M1"
M1_FruitsC.Visible = true

local IsUsingIt = false
M1_FruitsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        M1_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        DF_Use_M1 = false
        IsUsingIt = false
    else
        M1_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        DF_Use_M1 = true
        IsUsingIt = true
    end
end)

local Z_FruitsC = Instance.new("TextButton")
Z_FruitsC.Parent = Configs_Frame
Z_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Z_FruitsC.BackgroundTransparency = 0.5
Z_FruitsC.Size = UDim2.new(0.1, 0, 0.28, 0)
Z_FruitsC.Position = UDim2.new(0.115, 0, 0.189, 0)
Z_FruitsC.TextScaled = true
Z_FruitsC.TextColor3 = Color3.fromRGB(255, 255, 255)
Z_FruitsC.Font = SPECIFICS_FONT
Z_FruitsC.Text = "Z"
Z_FruitsC.Visible = true

local IsUsingIt = false
Z_FruitsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        Z_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        DF_Use_Z = false
        IsUsingIt = false
    else
        Z_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        DF_Use_Z = true
        IsUsingIt = true
    end
end)

local X_FruitsC = Instance.new("TextButton")
X_FruitsC.Parent = Configs_Frame
X_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
X_FruitsC.BackgroundTransparency = 0.5
X_FruitsC.Size = UDim2.new(0.1, 0, 0.28, 0)
X_FruitsC.Position = UDim2.new(0.220, 0, 0.189, 0)
X_FruitsC.TextScaled = true
X_FruitsC.TextColor3 = Color3.fromRGB(255, 255, 255)
X_FruitsC.Font = SPECIFICS_FONT
X_FruitsC.Text = "X"
X_FruitsC.Visible = true

local IsUsingIt = false
X_FruitsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        X_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        DF_Use_X = false
        IsUsingIt = false
    else
        X_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        DF_Use_X = true
        IsUsingIt = true
    end
end)

local C_FruitsC = Instance.new("TextButton")
C_FruitsC.Parent = Configs_Frame
C_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
C_FruitsC.BackgroundTransparency = 0.5
C_FruitsC.Size = UDim2.new(0.1, 0, 0.28, 0)
C_FruitsC.Position = UDim2.new(0.325, 0, 0.189, 0)
C_FruitsC.TextScaled = true
C_FruitsC.TextColor3 = Color3.fromRGB(255, 255, 255)
C_FruitsC.Font = SPECIFICS_FONT
C_FruitsC.Text = "C"
C_FruitsC.Visible = true

local IsUsingIt = false
C_FruitsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        C_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        DF_Use_C = false
        IsUsingIt = false
    else
        C_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        DF_Use_C = true
        IsUsingIt = true
    end
end)

local V_FruitsC = Instance.new("TextButton")
V_FruitsC.Parent = Configs_Frame
V_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
V_FruitsC.BackgroundTransparency = 0.5
V_FruitsC.Size = UDim2.new(0.1, 0, 0.28, 0)
V_FruitsC.Position = UDim2.new(0.430, 0, 0.189, 0)
V_FruitsC.TextScaled = true
V_FruitsC.TextColor3 = Color3.fromRGB(255, 255, 255)
V_FruitsC.Font = SPECIFICS_FONT
V_FruitsC.Text = "V"
V_FruitsC.Visible = true

local IsUsingIt = false
V_FruitsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        V_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        DF_Use_V = false
        IsUsingIt = false
    else
        V_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        DF_Use_V = true
        IsUsingIt = true
    end
end)

local F_FruitsC = Instance.new("TextButton")
F_FruitsC.Parent = Configs_Frame
F_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
F_FruitsC.BackgroundTransparency = 0.5
F_FruitsC.Size = UDim2.new(0.1, 0, 0.28, 0)
F_FruitsC.Position = UDim2.new(0.535, 0, 0.189, 0)
F_FruitsC.TextScaled = true
F_FruitsC.TextColor3 = Color3.fromRGB(255, 255, 255)
F_FruitsC.Font = SPECIFICS_FONT
F_FruitsC.Text = "F"
F_FruitsC.Visible = true

local IsUsingIt = false
F_FruitsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        F_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        DF_Use_F = false
        IsUsingIt = false
    else
        F_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        DF_Use_F = true
        IsUsingIt = true
    end
end)

local E_FruitsC = Instance.new("TextButton")
E_FruitsC.Parent = Configs_Frame
E_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
E_FruitsC.BackgroundTransparency = 0.5
E_FruitsC.Size = UDim2.new(0.1, 0, 0.28, 0)
E_FruitsC.Position = UDim2.new(0.640, 0, 0.189, 0)
E_FruitsC.TextScaled = true
E_FruitsC.TextColor3 = Color3.fromRGB(255, 255, 255)
E_FruitsC.Font = SPECIFICS_FONT
E_FruitsC.Text = "E"
E_FruitsC.Visible = true

local IsUsingIt = false
E_FruitsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        E_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        DF_Use_E = false
        IsUsingIt = false
    else
        E_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        DF_Use_E = true
        IsUsingIt = true
    end
end)

local B_FruitsC = Instance.new("TextButton")
B_FruitsC.Parent = Configs_Frame
B_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
B_FruitsC.BackgroundTransparency = 0.5
B_FruitsC.Size = UDim2.new(0.1, 0, 0.28, 0)
B_FruitsC.Position = UDim2.new(0.745, 0, 0.189, 0)
B_FruitsC.TextScaled = true
B_FruitsC.TextColor3 = Color3.fromRGB(255, 255, 255)
B_FruitsC.Font = SPECIFICS_FONT
B_FruitsC.Text = "B"
B_FruitsC.Visible = true

local IsUsingIt = false
B_FruitsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        B_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        DF_Use_B = false
        IsUsingIt = false
    else
        B_FruitsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        DF_Use_B = true
        IsUsingIt = true
    end
end)

-- SWORD CONFIGS --
local M1_SwordsC = Instance.new("TextButton")
M1_SwordsC.Parent = Configs_Frame
M1_SwordsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
M1_SwordsC.BackgroundTransparency = 0.5
M1_SwordsC.Size = UDim2.new(0.1, 0, 0.28, 0)
M1_SwordsC.Position = UDim2.new(0.010, 0, 0.68, 0)
M1_SwordsC.TextScaled = true
M1_SwordsC.TextColor3 = Color3.fromRGB(255, 255, 255)
M1_SwordsC.Font = SPECIFICS_FONT
M1_SwordsC.Text = "M1"
M1_SwordsC.Visible = true

local IsUsingIt = false
M1_SwordsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        M1_SwordsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        SW_Use_M1 = false
        IsUsingIt = false
    else
        M1_SwordsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        SW_Use_M1 = true
        IsUsingIt = true
    end
end)

local Z_SwordsC = Instance.new("TextButton")
Z_SwordsC.Parent = Configs_Frame
Z_SwordsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Z_SwordsC.BackgroundTransparency = 0.5
Z_SwordsC.Size = UDim2.new(0.1, 0, 0.28, 0)
Z_SwordsC.Position = UDim2.new(0.115, 0, 0.68, 0)
Z_SwordsC.TextScaled = true
Z_SwordsC.TextColor3 = Color3.fromRGB(255, 255, 255)
Z_SwordsC.Font = SPECIFICS_FONT
Z_SwordsC.Text = "Z"
Z_SwordsC.Visible = true

local IsUsingIt = false
Z_SwordsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        Z_SwordsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        SW_Use_Z = false
        IsUsingIt = false
    else
        Z_SwordsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        SW_Use_Z = true
        IsUsingIt = true
    end
end)

local X_SwordsC = Instance.new("TextButton")
X_SwordsC.Parent = Configs_Frame
X_SwordsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
X_SwordsC.BackgroundTransparency = 0.5
X_SwordsC.Size = UDim2.new(0.1, 0, 0.28, 0)
X_SwordsC.Position = UDim2.new(0.220, 0, 0.68, 0)
X_SwordsC.TextScaled = true
X_SwordsC.TextColor3 = Color3.fromRGB(255, 255, 255)
X_SwordsC.Font = SPECIFICS_FONT
X_SwordsC.Text = "X"
X_SwordsC.Visible = true

local IsUsingIt = false
X_SwordsC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        X_SwordsC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        SW_Use_X = false
        IsUsingIt = false
    else
        X_SwordsC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        SW_Use_X = true
        IsUsingIt = true
    end
end)

-- FIGHTINGSTYLE CONFIGS --
local M1_FightingStylesC = Instance.new("TextButton")
M1_FightingStylesC.Parent = Configs_Frame
M1_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
M1_FightingStylesC.BackgroundTransparency = 0.5
M1_FightingStylesC.Size = UDim2.new(0.05, 0, 0.28, 0)
M1_FightingStylesC.Position = UDim2.new(0.465, 0, 0.68, 0)
M1_FightingStylesC.TextScaled = true
M1_FightingStylesC.TextColor3 = Color3.fromRGB(255, 255, 255)
M1_FightingStylesC.Font = SPECIFICS_FONT
M1_FightingStylesC.Text = "M1"
M1_FightingStylesC.Visible = true

local IsUsingIt = false
M1_FightingStylesC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        M1_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        FS_Use_M1 = false
        IsUsingIt = false
    else
        M1_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        FS_Use_M1 = true
        IsUsingIt = true
    end
end)

local Z_FightingStylesC = Instance.new("TextButton")
Z_FightingStylesC.Parent = Configs_Frame
Z_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Z_FightingStylesC.BackgroundTransparency = 0.5
Z_FightingStylesC.Size = UDim2.new(0.05, 0, 0.28, 0)
Z_FightingStylesC.Position = UDim2.new(0.540, 0, 0.68, 0)
Z_FightingStylesC.TextScaled = true
Z_FightingStylesC.TextColor3 = Color3.fromRGB(255, 255, 255)
Z_FightingStylesC.Font = SPECIFICS_FONT
Z_FightingStylesC.Text = "Z"
Z_FightingStylesC.Visible = true

local IsUsingIt = false
Z_FightingStylesC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        Z_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        FS_Use_Z = false
        IsUsingIt = false
    else
        Z_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        FS_Use_Z = true
        IsUsingIt = true
    end
end)

local X_FightingStylesC = Instance.new("TextButton")
X_FightingStylesC.Parent = Configs_Frame
X_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
X_FightingStylesC.BackgroundTransparency = 0.5
X_FightingStylesC.Size = UDim2.new(0.05, 0, 0.28, 0)
X_FightingStylesC.Position = UDim2.new(0.615, 0, 0.68, 0)
X_FightingStylesC.TextScaled = true
X_FightingStylesC.TextColor3 = Color3.fromRGB(255, 255, 255)
X_FightingStylesC.Font = SPECIFICS_FONT
X_FightingStylesC.Text = "X"
X_FightingStylesC.Visible = true

local IsUsingIt = false
X_FightingStylesC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        X_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        FS_Use_X = false
        IsUsingIt = false
    else
        X_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        FS_Use_X = true
        IsUsingIt = true
    end
end)

local C_FightingStylesC = Instance.new("TextButton")
C_FightingStylesC.Parent = Configs_Frame
C_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
C_FightingStylesC.BackgroundTransparency = 0.5
C_FightingStylesC.Size = UDim2.new(0.05, 0, 0.28, 0)
C_FightingStylesC.Position = UDim2.new(0.690, 0, 0.68, 0)
C_FightingStylesC.TextScaled = true
C_FightingStylesC.TextColor3 = Color3.fromRGB(255, 255, 255)
C_FightingStylesC.Font = SPECIFICS_FONT
C_FightingStylesC.Text = "C"
C_FightingStylesC.Visible = true

local IsUsingIt = false
C_FightingStylesC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        C_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        FS_Use_C = false
        IsUsingIt = false
    else
        C_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        FS_Use_C = true
        IsUsingIt = true
    end
end)

local V_FightingStylesC = Instance.new("TextButton")
V_FightingStylesC.Parent = Configs_Frame
V_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
V_FightingStylesC.BackgroundTransparency = 0.5
V_FightingStylesC.Size = UDim2.new(0.05, 0, 0.28, 0)
V_FightingStylesC.Position = UDim2.new(0.765, 0, 0.68, 0)
V_FightingStylesC.TextScaled = true
V_FightingStylesC.TextColor3 = Color3.fromRGB(255, 255, 255)
V_FightingStylesC.Font = SPECIFICS_FONT
V_FightingStylesC.Text = "V"
V_FightingStylesC.Visible = true

local IsUsingIt = false
V_FightingStylesC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        V_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        FS_Use_V = false
        IsUsingIt = false
    else
        V_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        FS_Use_V = true
        IsUsingIt = true
    end
end)

local F_FightingStylesC = Instance.new("TextButton")
F_FightingStylesC.Parent = Configs_Frame
F_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
F_FightingStylesC.BackgroundTransparency = 0.5
F_FightingStylesC.Size = UDim2.new(0.05, 0, 0.28, 0)
F_FightingStylesC.Position = UDim2.new(0.840, 0, 0.68, 0)
F_FightingStylesC.TextScaled = true
F_FightingStylesC.TextColor3 = Color3.fromRGB(255, 255, 255)
F_FightingStylesC.Font = SPECIFICS_FONT
F_FightingStylesC.Text = "F"
F_FightingStylesC.Visible = true

local IsUsingIt = false
F_FightingStylesC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        F_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        FS_Use_F = false
        IsUsingIt = false
    else
        F_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        FS_Use_F = true
        IsUsingIt = true
    end
end)

local E_FightingStylesC = Instance.new("TextButton")
E_FightingStylesC.Parent = Configs_Frame
E_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
E_FightingStylesC.BackgroundTransparency = 0.5
E_FightingStylesC.Size = UDim2.new(0.05, 0, 0.28, 0)
E_FightingStylesC.Position = UDim2.new(0.915, 0, 0.68, 0)
E_FightingStylesC.TextScaled = true
E_FightingStylesC.TextColor3 = Color3.fromRGB(255, 255, 255)
E_FightingStylesC.Font = SPECIFICS_FONT
E_FightingStylesC.Text = "E"
E_FightingStylesC.Visible = true

local IsUsingIt = false
E_FightingStylesC.MouseButton1Click:Connect(function()
    if IsUsingIt then
        E_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        FS_Use_E = false
        IsUsingIt = false
    else
        E_FightingStylesC.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        FS_Use_E = true
        IsUsingIt = true
    end
end)

-- End/Closed It --
-- FSF Button --
local LockedInUsedFruit = Instance.new("TextButton")
LockedInUsedFruit.Parent = Pro_KingLegacySG
LockedInUsedFruit.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
LockedInUsedFruit.BackgroundTransparency = 0.5
LockedInUsedFruit.Size = UDim2.new(0.05, 0, 0.1, 0)
LockedInUsedFruit.Position = UDim2.new(0.15, 0, 0.28, 0)
LockedInUsedFruit.TextScaled = true
LockedInUsedFruit.TextColor3 = Color3.fromRGB(255, 255, 255)
LockedInUsedFruit.Font = SPECIFICS_FONT
LockedInUsedFruit.Text = "Turn Off[FR]"
LockedInUsedFruit.Visible = false

local LockedInUsedSword = Instance.new("TextButton")
LockedInUsedSword.Parent = Pro_KingLegacySG
LockedInUsedSword.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
LockedInUsedSword.BackgroundTransparency = 0.5
LockedInUsedSword.Size = UDim2.new(0.05, 0, 0.1, 0)
LockedInUsedSword.Position = UDim2.new(0.22, 0, 0.28, 0)
LockedInUsedSword.TextScaled = true
LockedInUsedSword.TextColor3 = Color3.fromRGB(255, 255, 255)
LockedInUsedSword.Font = SPECIFICS_FONT
LockedInUsedSword.Text = "Turn Off[SW]"
LockedInUsedSword.Visible = false

local LockedInUsedFightingStyle = Instance.new("TextButton")
LockedInUsedFightingStyle.Parent = Pro_KingLegacySG
LockedInUsedFightingStyle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
LockedInUsedFightingStyle.BackgroundTransparency = 0.5
LockedInUsedFightingStyle.Size = UDim2.new(0.05, 0, 0.1, 0)
LockedInUsedFightingStyle.Position = UDim2.new(0.29, 0, 0.28, 0)
LockedInUsedFightingStyle.TextScaled = true
LockedInUsedFightingStyle.TextColor3 = Color3.fromRGB(255, 255, 255)
LockedInUsedFightingStyle.Font = SPECIFICS_FONT
LockedInUsedFightingStyle.Text = "Turn Off[FS]"
LockedInUsedFightingStyle.Visible = false

-- MainScript/FarmerScript/MiscScript Button --
local FruitsLockedIn = Instance.new("TextButton")
FruitsLockedIn.Parent = D_Misc
FruitsLockedIn.BackgroundColor3 = Color3.new(0, 0, 0)
FruitsLockedIn.BackgroundTransparency = 0.5
FruitsLockedIn.Size = UDim2.new(0.8, 0, 0.05, 0)
FruitsLockedIn.TextScaled = true
FruitsLockedIn.Position = UDim2.new(0.1, 0, 0.005, 0)
FruitsLockedIn.TextColor3 = Color3.fromRGB(255, 255, 255)
FruitsLockedIn.Font = SPECIFICS_FONT
FruitsLockedIn.Text = "AUTO[FR]"

local SwordsLockedIn = Instance.new("TextButton")
SwordsLockedIn.Parent = D_Misc
SwordsLockedIn.BackgroundColor3 = Color3.new(0, 0, 0)
SwordsLockedIn.BackgroundTransparency = 0.5
SwordsLockedIn.Size = UDim2.new(0.8, 0, 0.05, 0)
SwordsLockedIn.TextScaled = true
SwordsLockedIn.Position = UDim2.new(0.1, 0, 0.085, 0)
SwordsLockedIn.TextColor3 = Color3.fromRGB(255, 255, 255)
SwordsLockedIn.Font = SPECIFICS_FONT
SwordsLockedIn.Text = "AUTO[SW]"

local FightingStylesLockedIn = Instance.new("TextButton")
FightingStylesLockedIn.Parent = D_Misc
FightingStylesLockedIn.BackgroundColor3 = Color3.new(0, 0, 0)
FightingStylesLockedIn.BackgroundTransparency = 0.5
FightingStylesLockedIn.Size = UDim2.new(0.8, 0, 0.05, 0)
FightingStylesLockedIn.TextScaled = true
FightingStylesLockedIn.Position = UDim2.new(0.1, 0, 0.165, 0)
FightingStylesLockedIn.TextColor3 = Color3.fromRGB(255, 255, 255)
FightingStylesLockedIn.Font = SPECIFICS_FONT
FightingStylesLockedIn.Text = "AUTO[FS]"

local ConfigsLockedIn = Instance.new("TextButton")
ConfigsLockedIn.Parent = D_Misc
ConfigsLockedIn.BackgroundColor3 = Color3.new(0, 0, 0)
ConfigsLockedIn.BackgroundTransparency = 0.5
ConfigsLockedIn.Size = UDim2.new(0.8, 0, 0.05, 0)
ConfigsLockedIn.TextScaled = true
ConfigsLockedIn.Position = UDim2.new(0.1, 0, 0.245, 0)
ConfigsLockedIn.TextColor3 = Color3.fromRGB(255, 255, 255)
ConfigsLockedIn.Font = SPECIFICS_FONT
ConfigsLockedIn.Text = "Config Skills[FR/SW/FS]"

-- (A) Function --
-- Get Nearest HumanoidRootPart (Nearby from LocalPlayer) --
local RS = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local function NearestHRP(position)
    local N_HRP = nil
    local NDistance = math.huge
    local PCharacter = player.Character
    
    local function SearchFolder(folder)
        for _, object in ipairs(folder:GetChildren()) do
            if object:IsA("Model") and object:FindFirstChild("HumanoidRootPart") and object ~= PCharacter then
                local hrp_0 = object.HumanoidRootPart
                local distance = (hrp_0.Position - position).magnitude
                
                if distance < NDistance then
                    NDistance = distance
                    N_HRP = hrp_0
                end
            end
            
            if object:IsA("Folder") then
                SearchFolder(object)
            end
        end
    end
    
    SearchFolder(Workspace)
    
    return N_HRP
end

-- X --
local player = game:GetService("Players").LocalPlayer
-- (A-1) Function --
-- In Used For Fruits Ability --
local function Fruits_AbilityFireEvent(N_HRP)
    local function InUsedFruits()
        local BackPackIV = player.Backpack
        local character = player.Character or player.CharacterAdded:Wait()
        local ExistedChar = game.Workspace.PlayerCharacters:FindFirstChild(player.Name)
        
        local function FruitUsing(item_x)
            for _, TL in ipairs(BackPackIV:GetChildren()) do
                if TL:IsA("Tool") and TL.Name == item_x then
                    return true
                end
            end
            
            for _, TL in ipairs(character:GetChildren()) do
                if TL:IsA("Tool") and TL.Name == item_x then
                    return true
                end
            end
            
            if ExistedChar then
                for _, TL in ipairs(ExistedChar:GetChildren()) do
                    if TL:IsA("Tool") and TL.Name == item_x then
                        return true
                    end
                end
            end
            
            return false
        end
        
        local found = false
        
        if FruitUsing("BombBomb") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_BombBomb_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BombBomb_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_BombBomb_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BombBomb_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_BombBomb_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BombBomb_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_BombBomb_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BombBomb_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_BombBomb_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BombBomb_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_BombBomb_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BombBomb_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_BombBomb_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BombBomb_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_BombBomb_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_BombBomb_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("HumanHuman") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_HumanHuman_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            print("It's Activated M1")
            wait(0.05)
            
            local args = {
                [1] = "DF_HumanHuman_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_HumanHuman_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_HumanHuman_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_HumanHuman_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_HumanHuman_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_HumanHuman_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_HumanHuman_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_HumanHuman_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_HumanHuman_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_HumanHuman_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_HumanHuman_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_HumanHuman_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_HumanHuman_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_HumanHuman_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_HumanHuman_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("SpikeSpike") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_SpikeSpike_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SpikeSpike_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_SpikeSpike_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SpikeSpike_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_SpikeSpike_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SpikeSpike_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_SpikeSpike_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SpikeSpike_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_SpikeSpike_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SpikeSpike_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_SpikeSpike_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SpikeSpike_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_SpikeSpike_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SpikeSpike_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_SpikeSpike_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_SpikeSpike_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("BarrierBarrier") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_BarrierBarrier_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BarrierBarrier_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_BarrierBarrier_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BarrierBarrier_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_BarrierBarrier_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BarrierBarrier_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_BarrierBarrier_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BarrierBarrier_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_BarrierBarrier_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BarrierBarrier_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_BarrierBarrier_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BarrierBarrier_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_BarrierBarrier_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_BarrierBarrier_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_BarrierBarrier_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_BarrierBarrier_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("PawPaw") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_PawPaw_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_PawPaw_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_PawPaw_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_PawPaw_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_PawPaw_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_PawPaw_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_PawPaw_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_PawPaw_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_PawPaw_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_PawPaw_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_PawPaw_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_PawPaw_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_PawPaw_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_PawPaw_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_PawPaw_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_PawPaw_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("LoveLove") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_LoveLove_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LoveLove_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_LoveLove_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LoveLove_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_LoveLove_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LoveLove_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_LoveLove_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LoveLove_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_LoveLove_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LoveLove_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_LoveLove_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LoveLove_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_LoveLove_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LoveLove_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_LoveLove_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_LoveLove_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("StringString") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_StringString_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_StringString_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_StringString_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_StringString_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_StringString_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_StringString_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_StringString_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_StringString_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_StringString_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_StringString_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_StringString_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_StringString_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_StringString_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_StringString_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_StringString_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_StringString_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("WolfWolf") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_WolfWolf_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_WolfWolf_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_WolfWolf_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_WolfWolf_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_WolfWolf_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_WolfWolf_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_WolfWolf_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_WolfWolf_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_WolfWolf_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_WolfWolf_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_WolfWolf_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_WolfWolf_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_WolfWolf_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_WolfWolf_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_WolfWolf_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_WolfWolf_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("GiraffeGiraffe") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_GiraffeGiraffe_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GiraffeGiraffe_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_GiraffeGiraffe_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GiraffeGiraffe_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_GiraffeGiraffe_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GiraffeGiraffe_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_GiraffeGiraffe_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GiraffeGiraffe_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_GiraffeGiraffe_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GiraffeGiraffe_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_GiraffeGiraffe_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GiraffeGiraffe_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_GiraffeGiraffe_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GiraffeGiraffe_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_GiraffeGiraffe_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_GiraffeGiraffe_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("ShadowShadow") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_ShadowShadow_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_ShadowShadow_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_ShadowShadow_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_ShadowShadow_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_ShadowShadow_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_ShadowShadow_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_ShadowShadow_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_ShadowShadow_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_ShadowShadow_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_ShadowShadow_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_ShadowShadow_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_ShadowShadow_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_ShadowShadow_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_ShadowShadow_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_ShadowShadow_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_ShadowShadow_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("SmokeSmoke") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_SmokeSmoke_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SmokeSmoke_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_SmokeSmoke_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SmokeSmoke_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_SmokeSmoke_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SmokeSmoke_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_SmokeSmoke_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SmokeSmoke_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_SmokeSmoke_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SmokeSmoke_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_SmokeSmoke_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SmokeSmoke_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_SmokeSmoke_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_SmokeSmoke_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_SmokeSmoke_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_SmokeSmoke_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("GumGum") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_GumGum_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GumGum_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_GumGum_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GumGum_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_GumGum_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GumGum_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_GumGum_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GumGum_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_GumGum_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GumGum_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_GumGum_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GumGum_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_GumGum_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_GumGum_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_GumGum_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_GumGum_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("OpOp") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_OpOp_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_OpOp_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_OpOp_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_OpOp_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_OpOp_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_OpOp_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_OpOp_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_OpOp_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_OpOp_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_OpOp_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_OpOp_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_OpOp_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_OpOp_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_OpOp_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_OpOp_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_OpOp_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if FruitUsing("LeopardLeopard") then
            if DF_Use_M1 then
            local args = {
                [1] = "DF_LeopardLeopard_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LeopardLeopard_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_Z then
            local args = {
                [1] = "DF_LeopardLeopard_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LeopardLeopard_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_X then
            local args = {
                [1] = "DF_LeopardLeopard_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LeopardLeopard_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_C then
            local args = {
                [1] = "DF_LeopardLeopard_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LeopardLeopard_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_V then
            local args = {
                [1] = "DF_LeopardLeopard_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LeopardLeopard_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_E then
            local args = {
                [1] = "DF_LeopardLeopard_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LeopardLeopard_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_B then
            local args = {
                [1] = "DF_LeopardLeopard_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "DF_LeopardLeopard_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if DF_Use_F then
            local args = {
                [1] = "DF_LeopardLeopard_F",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(5)
            
            local args = {
                [1] = "DF_LeopardLeopard_F",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if not found then
            print("Not Found Tools")
        end
    end
    
    InUsedFruits()
end
-- End (A-1) --
local Its_Funny = false
LockedInUsedFruit.MouseButton1Click:Connect(function()
    if Its_Funny then
        LockedInUsedFruit.TextColor3 = Color3.fromRGB(255, 255, 255)
        LockedInUsedFruit.Text = "Turn Off[FR]"
        Its_Funny = false
    else
        LockedInUsedFruit.TextColor3 = Color3.fromRGB(255, 255, 0)
        LockedInUsedFruit.Text = "Tap 3 Time[FR]"
        Its_Funny = true
        while Its_Funny do
            local p_HRP = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            local p_P = p_HRP and p_HRP.Position
            
            if p_P then
                local N_HRP = NearestHRP(p_P)
                
                if N_HRP then
                    Fruits_AbilityFireEvent(N_HRP)
                else
                    Fruits_AbilityFireEvent(p_HRP)
                end
            else
                print("LocalPlayer HumanoidRootPart Can't Be Found.")
            end
            wait(0.001)
        end
    end
end)

local IsVisibility = false
FruitsLockedIn.MouseButton1Click:Connect(function()
    if IsVisibility then
        FruitsLockedIn.TextColor3 = Color3.fromRGB(255, 255, 255)
        LockedInUsedFruit.Visible = false
        IsVisibility = false
    else
        FruitsLockedIn.TextColor3 = Color3.fromRGB(0, 255, 0)
        LockedInUsedFruit.Visible = true
        IsVisibility = true
    end
end)

-- (A-2) Function --
-- In Used For Swords Ability --
local function Swords_AbilityFireEvent(N_HRP)
    local function InUsedSwords()
        local BackPackIV = player.Backpack
        local character = player.Character or player.CharacterAdded:Wait()
        local ExistedChar = game.Workspace.PlayerCharacters:FindFirstChild(player.Name)
        
        local function SwordUsing(item_x)
            for _, TL in ipairs(BackPackIV:GetChildren()) do
                if TL:IsA("Tool") and TL.Name == item_x then
                    return true
                end
            end
            
            for _, TL in ipairs(character:GetChildren()) do
                if TL:IsA("Tool") and TL.Name == item_x then
                    return true
                end
            end
            
            if ExistedChar then
                for _, TL in ipairs(ExistedChar:GetChildren()) do
                    if TL:IsA("Tool") and TL.Name == item_x then
                        return true
                    end
                end
            end
            
            return false
        end
        
        local found = false
        
        if SwordUsing("Tashi Blade") then
            if SW_Use_M1 then
            local args = {
                [1] = "SW_Tashi Blade_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "SW_Tashi Blade_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if SW_Use_Z then
            local args = {
                [1] = "SW_Tashi Blade_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "SW_Tashi Blade_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if SW_Use_X then
            local args = {
                [1] = "SW_Tashi Blade_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "SW_Tashi Blade_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if not found then
            print("Not Found Tools")
        end
    end
    
    InUsedSwords()
end
-- End (A-2) --
local Its_Funny = false
LockedInUsedSword.MouseButton1Click:Connect(function()
    if Its_Funny then
        LockedInUsedSword.TextColor3 = Color3.fromRGB(255, 255, 255)
        LockedInUsedSword.Text = "Turn Off[SW]"
        Its_Funny = false
    else
        LockedInUsedSword.TextColor3 = Color3.fromRGB(255, 255, 0)
        LockedInUsedSword.Text = "Tap 3 Time[SW]"
        Its_Funny = true
        while Its_Funny do
            local p_HRP = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            local p_P = p_HRP and p_HRP.Position
            
            if p_P then
                local N_HRP = NearestHRP(p_P)
                
                if N_HRP then
                    Swords_AbilityFireEvent(N_HRP)
                else
                    Swords_AbilityFireEvent(p_HRP)
                end
            else
                print("LocalPlayer HumanoidRootPart Can't Be Found.")
            end
            wait(0.001)
        end
    end
end)

local IsVisibility = false
SwordsLockedIn.MouseButton1Click:Connect(function()
    if IsVisibility then
        SwordsLockedIn.TextColor3 = Color3.fromRGB(255, 255, 255)
        LockedInUsedSword.Visible = false
        IsVisibility = false
    else
        SwordsLockedIn.TextColor3 = Color3.fromRGB(0, 255, 0)
        LockedInUsedSword.Visible = true
        IsVisibility = true
    end
end)

-- (A-3) Function --
-- In Used For FightingStyles Ability --
local function FightingStyles_AbilityFireEvent(N_HRP)
    local function InUsedFightingStyles()
        local BackPackIV = player.Backpack
        local character = player.Character or player.CharacterAdded:Wait()
        local ExistedChar = game.Workspace.PlayerCharacters:FindFirstChild(player.Name)
        
        local function FightingStyleUsing(item_x)
            for _, TL in ipairs(BackPackIV:GetChildren()) do
                if TL:IsA("Tool") and TL.Name == item_x then
                    return true
                end
            end
            
            for _, TL in ipairs(character:GetChildren()) do
                if TL:IsA("Tool") and TL.Name == item_x then
                    return true
                end
            end
            
            if ExistedChar then
                for _, TL in ipairs(ExistedChar:GetChildren()) do
                    if TL:IsA("Tool") and TL.Name == item_x then
                        return true
                    end
                end
            end
            
            return false
        end
        
        local found = false
        
        if FightingStyleUsing("Combat") then
            if FS_Use_M1 then
            local args = {
                [1] = "FS_Combat_M1",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "FS_Combat_M1",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if FS_Use_Z then
            local args = {
                [1] = "FS_Combat_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "FS_Combat_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if FS_Use_X then
            local args = {
                [1] = "FS_Combat_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "FS_Combat_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if FS_Use_C then
            local args = {
                [1] = "FS_Combat_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "FS_Combat_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if FS_Use_V then
            local args = {
                [1] = "FS_Combat_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "FS_Combat_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            
            if FS_Use_E then
            local args = {
                [1] = "FS_Combat_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.05)
            
            local args = {
                [1] = "FS_Combat_E",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(N_HRP.Position) * CFrame.Angles(-0, 0, -0)
                }
            }
            
            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            
            wait(0.001)
            end
            found = true
        end
        
        if not found then
            print("Not Found Tools")
        end
    end
    
    InUsedFightingStyles()
end
-- End (A-3) --
local Its_Funny = false
LockedInUsedFightingStyle.MouseButton1Click:Connect(function()
    if Its_Funny then
        LockedInUsedFightingStyle.TextColor3 = Color3.fromRGB(255, 255, 255)
        LockedInUsedFightingStyle.Text = "Turn Off[FS]"
        Its_Funny = false
    else
        LockedInUsedFightingStyle.TextColor3 = Color3.fromRGB(255, 255, 0)
        LockedInUsedFightingStyle.Text = "Tap 3 Time[FS]"
        Its_Funny = true
        while Its_Funny do
            local p_HRP = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            local p_P = p_HRP and p_HRP.Position
            
            if p_P then
                local N_HRP = NearestHRP(p_P)
                
                if N_HRP then
                    FightingStyles_AbilityFireEvent(N_HRP)
                else
                    FightingStyles_AbilityFireEvent(p_HRP)
                end
            else
                print("LocalPlayer HumanoidRootPart Can't Be Found.")
            end
            wait(0.001)
        end
    end
end)

local IsVisibility = false
FightingStylesLockedIn.MouseButton1Click:Connect(function()
    if IsVisibility then
        FightingStylesLockedIn.TextColor3 = Color3.fromRGB(255, 255, 255)
        LockedInUsedFightingStyle.Visible = false
        IsVisibility = false
    else
        FightingStylesLockedIn.TextColor3 = Color3.fromRGB(0, 255, 0)
        LockedInUsedFightingStyle.Visible = true
        IsVisibility = true
    end
end)

local IsVisibility_Configs = false
ConfigsLockedIn.MouseButton1Click:Connect(function()
    if IsVisibility_Configs then
        ConfigsLockedIn.TextColor3 = Color3.fromRGB(255, 255, 255)
        Configs_Frame.Visible = false
        IsVisibility_Configs = false
    else
        ConfigsLockedIn.TextColor3 = Color3.fromRGB(0, 255, 0)
        Configs_Frame.Visible = true
        IsVisibility_Configs = true
    end
end)

-- X --
-- DE:Second Page --
local PlayerStatsCheckF = Instance.new("TextButton", SG)
PlayerStatsCheckF.Parent = D_Misc
PlayerStatsCheckF.BackgroundColor3 = Color3.new(0, 0, 0)
PlayerStatsCheckF.BackgroundTransparency = 0.5
PlayerStatsCheckF.Size = UDim2.new(0.8, 0, 0.05, 0)
PlayerStatsCheckF.Position = UDim2.new(0.1, 0, 0.325, 0)
PlayerStatsCheckF.TextScaled = true
PlayerStatsCheckF.TextColor3 = Color3.new(1, 1, 1)
PlayerStatsCheckF.Font = Enum.Font.PatrickHand
PlayerStatsCheckF.Text = "Data ESP: [OFF]"

local isToggledOn = false
local billboardGuis = {}

local function createBillboardGui(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local head = player.Character:WaitForChild("Head")
    local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude
    local level = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("lvl") and player.PlayerStats.lvl.Value or "N/A"
    local beli = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("beli") and player.PlayerStats.beli.Value or "N/A"
    local devilf = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("DFName") and player.PlayerStats.DFName.Value or "N/A"
    local Fragments = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("Gem") and player.PlayerStats.Gem.Value or "N/A"
    local FStored = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("FruitStore") and player.PlayerStats.FruitStore.Value or "N/A"
    local playersDisplayName = player.DisplayName or "Unknown"
    local username = player.Name

    local billboard = Instance.new("BillboardGui")
    billboard.Size = UDim2.new(0, 200, 0, 120)
    billboard.StudsOffset = Vector3.new(-8, 0, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = head

    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Size = UDim2.new(1, 0, 0, 25)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    distanceLabel.TextStrokeTransparency = 0.5
    distanceLabel.Text = "[Distance:" .. math.floor(distance) .. "m]"
    distanceLabel.TextScaled = false
    distanceLabel.TextSize = 5
    distanceLabel.Parent = billboard

    local levelLabel = Instance.new("TextLabel")
    levelLabel.Size = UDim2.new(1, 0, 0, 25)
    levelLabel.Position = UDim2.new(0, 0, 0, 9)
    levelLabel.BackgroundTransparency = 1
    levelLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    levelLabel.TextStrokeTransparency = 0.5
    levelLabel.Text = "[Level:" .. level .. "]"
    levelLabel.TextScaled = false
    levelLabel.TextSize = 5
    levelLabel.Parent = billboard

    local beliLabel = Instance.new("TextLabel")
    beliLabel.Size = UDim2.new(1, 0, 0, 25)
    beliLabel.Position = UDim2.new(0, 0, 0, 18)
    beliLabel.BackgroundTransparency = 1
    beliLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    beliLabel.TextStrokeTransparency = 0.5
    beliLabel.Text = "[Beli:" .. beli .. "]"
    beliLabel.TextScaled = false
    beliLabel.TextSize = 5
    beliLabel.Parent = billboard

    local devilfLabel = Instance.new("TextLabel")
    devilfLabel.Size = UDim2.new(1, 0, 0, 25)
    devilfLabel.Position = UDim2.new(0, 0, 0, 27)
    devilfLabel.BackgroundTransparency = 1
    devilfLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
    devilfLabel.TextStrokeTransparency = 0.5
    devilfLabel.Text = "[Fruit Used:" .. devilf .. "]"
    devilfLabel.TextScaled = false
    devilfLabel.TextSize = 5
    devilfLabel.Parent = billboard

    local playersLabel = Instance.new("TextLabel")
    playersLabel.Size = UDim2.new(1, 0, 0, 25)
    playersLabel.Position = UDim2.new(0, 0, 0, 36)
    playersLabel.BackgroundTransparency = 1
    playersLabel.TextColor3 = Color3.fromRGB(255, 165, 0)
    playersLabel.TextStrokeTransparency = 0.5
    playersLabel.Text = "[Display Name:" .. playersDisplayName .. "]"
    playersLabel.TextScaled = false
    playersLabel.TextSize = 5
    playersLabel.Parent = billboard

    local userLabel = Instance.new("TextLabel")
    userLabel.Size = UDim2.new(1, 0, 0, 25)
    userLabel.Position = UDim2.new(0, 0, 0, 45)
    userLabel.BackgroundTransparency = 1
    userLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    userLabel.TextStrokeTransparency = 0.5
    userLabel.Text = "[Username:" .. username .. "]"
    userLabel.TextScaled = false
    userLabel.TextSize = 5
    userLabel.Parent = billboard

    local GemLabel = Instance.new("TextLabel")
    GemLabel.Size = UDim2.new(1, 0, 0, 25)
    GemLabel.Position = UDim2.new(0, 0, 0, 54)
    GemLabel.BackgroundTransparency = 1
    GemLabel.TextColor3 = Color3.fromRGB(255, 0, 255)
    GemLabel.TextStrokeTransparency = 0.5
    GemLabel.Text = "[Gem:" .. Fragments .. "]"
    GemLabel.TextScaled = false
    GemLabel.TextSize = 5
    GemLabel.Parent = billboard

    local FSLabel = Instance.new("TextLabel")
    FSLabel.Size = UDim2.new(1, 0, 0, 25)
    FSLabel.Position = UDim2.new(0, 0, 0, 63)
    FSLabel.BackgroundTransparency = 1
    FSLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    FSLabel.TextStrokeTransparency = 0.5
    FSLabel.Text = "[Fruit Stored:" .. FStored .. "]"
    FSLabel.TextScaled = false
    FSLabel.TextSize = 5
    FSLabel.Parent = billboard

    billboardGuis[player.UserId] = {billboard, distanceLabel, levelLabel, beliLabel, devilfLabel, playersLabel, userLabel, GemLabel, FSLabel}
end

local function updateBillboardGui(player)
    if billboardGuis[player.UserId] then
        local billboard, distanceLabel, levelLabel, beliLabel, devilfLabel, playersLabel, userLabel, GemLabel, FSLabel = unpack(billboardGuis[player.UserId])
        
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude
            local level = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("lvl") and player.PlayerStats.lvl.Value or "N/A"
            local beli = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("beli") and player.PlayerStats.beli.Value or "N/A"
            local devilf = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("DFName") and player.PlayerStats.DFName.Value or "N/A"
            local Fragments = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("Gem") and player.PlayerStats.Gem.Value or "N/A"
            local FStored = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("FruitStore") and player.PlayerStats.FruitStore.Value or "N/A"
            local playersDisplayName = player.DisplayName or "Unknown"
            local username = player.Name

            distanceLabel.Text = "[Distance:" .. math.floor(distance) .. "m]"
            levelLabel.Text = "[Level:" .. level .. "]"
            beliLabel.Text = "[Beli:" .. beli .. "]"
            devilfLabel.Text = "[Fruit Used:" .. devilf .. "]"
            GemLabel.Text = "[Gem:" .. Fragments .. "]"
            FSLabel.Text = "[Fruit Stored:" .. FStored .. "]"
            playersLabel.Text = "[Display Name:" .. playersDisplayName .. "]"
            userLabel.Text = "[Username:" .. username .. "]"
        end
    end
end

local function toggleBillboards()
    isToggledOn = not isToggledOn
    PlayerStatsCheckF.Text = isToggledOn and "PlayerStats ESP: [OFF]" or "PlayerStats ESP: [ON]"

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if isToggledOn then
                createBillboardGui(player)
            else
                if billboardGuis[player.UserId] then
                    billboardGuis[player.UserId][1]:Destroy()
                    billboardGuis[player.UserId] = nil
                end
            end
        end
    end
end

PlayerStatsCheckF.MouseButton1Click:Connect(toggleBillboards)

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if isToggledOn then
            createBillboardGui(player)
        end
    end)

    if isToggledOn then
        createBillboardGui(player)
    end
end)

for _, player in ipairs(Players:GetPlayers()) do
    if isToggledOn then
        createBillboardGui(player)
    end
end

task.spawn(function()
    while true do
        wait(0.01)
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                updateBillboardGui(player)
            end
        end
    end
end)

local WalkOnAir = Instance.new("TextButton")
WalkOnAir.Parent = Tatsumaki_D
WalkOnAir.BackgroundColor3 = Color3.new(0, 0, 0)
WalkOnAir.BackgroundTransparency = 0.5
WalkOnAir.Size = UDim2.new(0.03, 0, 0.9, 0)
WalkOnAir.TextScaled = true
WalkOnAir.Position = UDim2.new(0.125, 0, 0, 0)
WalkOnAir.TextColor3 = Color3.fromRGB(255, 255, 255)
WalkOnAir.Font = SPECIFICS_FONT
WalkOnAir.Text = "Walking: Normal"

local isToggled = false
local part

WalkOnAir.MouseButton1Click:Connect(function()
    local player = game.Players.LocalPlayer

    if not isToggled then
        isToggled = true
        WalkOnAir.Text = "Walking: Safe"
        WalkOnAir.TextColor3 = Color3.fromRGB(0, 255, 255)

        part = Instance.new("Part")
        part.Size = Vector3.new(5, 0.2, 5)
        part.Position = Vector3.new(
            player.Character.HumanoidRootPart.Position.X,
            player.Character.HumanoidRootPart.Position.Y - 3.5,
            player.Character.HumanoidRootPart.Position.Z
        )
        part.Anchored = true
        part.Transparency = 1
        part.Parent = workspace
        
        local lockedY = part.Position.Y

        local function updatePartPosition()
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local humanoidRootPart = player.Character.HumanoidRootPart
                part.Position = Vector3.new(
                    humanoidRootPart.Position.X,
                    lockedY,
                    humanoidRootPart.Position.Z
                )
                
                if humanoidRootPart.Position.Y < lockedY then
                    humanoidRootPart.CFrame = CFrame.new(
                        humanoidRootPart.Position.X,
                        lockedY + 2,
                        humanoidRootPart.Position.Z
                    )
                end
            end
        end

        local updateConnection
        updateConnection = game:GetService("RunService").Heartbeat:Connect(function()
            if isToggled then
                updatePartPosition()
            else
                updateConnection:Disconnect()
            end
        end)

    else
        isToggled = false
        WalkOnAir.Text = "Walking: Normal"
        WalkOnAir.TextColor3 = Color3.fromRGB(255, 255, 255)
        
        if part then
            part:Destroy()
            part = nil
        end
    end
end)

-- EndX1 -- 
local SpawnPointsCS = false

local function LvlUPQuest()
    local his = game:GetService("Players").LocalPlayer
    local squareb = his.Character.HumanoidRootPart
    local squareh = his.Character.Humanoid.Health
    local crlvl = his:FindFirstChild("PlayerStats") and his.PlayerStats:FindFirstChild("lvl") and his.PlayerStats.lvl.Value or "N/A"
        if crlvl < 50 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-2053, 17, -4080)
            else
                squareb.CFrame = CFrame.new(-2076, 49, -4557)
            end
        elseif crlvl < 100 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-849, 17, -3193)
            else
                squareb.CFrame = CFrame.new(-686, 52, -3445)
            end
        elseif crlvl < 180 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-2243, 25, -2749)
            else
                squareb.CFrame = CFrame.new(-2420, 49, -2645)
            end
        elseif crlvl < 250 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-865, 24, -1404)
            else
                squareb.CFrame = CFrame.new(-743, 24, -1372)
            end
        elseif crlvl < 400 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-4115, 17, -3044)
            else
                squareb.CFrame = CFrame.new(-4148, 17, -3065)
            end
        elseif crlvl < 525 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-5281, 28, -1458)
            else
                squareb.CFrame = CFrame.new(-5433, 29, -1298)
            end
        elseif crlvl < 800 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-2706, 17, -780)
            else
                squareb.CFrame = CFrame.new(-2743, 41, -751)
            end
        elseif crlvl < 1000 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-4195, 369, 1240)
            else
                squareb.CFrame = CFrame.new(-4320, 385, 1243)
            end
        elseif crlvl < 1200 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(1345, 18, 925)
            else
                squareb.CFrame = CFrame.new(1532, 21, 943)
            end
        elseif crlvl < 1500 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-1298, 12, 1813)
            else
                squareb.CFrame = CFrame.new(-1216, 21, 2106)
            end
        elseif crlvl < 1750 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-2558, 15, 3635)
            else
                squareb.CFrame = CFrame.new(-2809, 19, 4237)
            end
        elseif crlvl < 2000 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(1898, 8, -2013)
            else
                squareb.CFrame = CFrame.new(2272, 55, -1824)
            end
        elseif crlvl < 2250 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-1152, 5, 6076)
            else
                squareb.CFrame = CFrame.new(-1716, 40, 6318)
            end
        end
end

local tb2 = Instance.new("TextButton")
tb2.Parent = Pro_KingLegacySG
tb2.Size = UDim2.new(0.05, 0, 0.1, 0)
tb2.Position = UDim2.new(0, 0, 0.15, 0)
tb2.Text = "Switch"
tb2.Font = SPECIFICS_FONT
tb2.TextScaled = true
tb2.TextColor3 = Color3.new(1, 1, 1)
tb2.BackgroundColor3 = Color3.new(0, 0, 0)
tb2.BackgroundTransparency = 0.5
tb2.Visible = false

local isfalse = false
tb2.MouseButton1Click:Connect(function()
    if isfalse then
        tb2.TextColor3 = Color3.new(1, 1, 1)
        SpawnPointsCS = false
        isfalse = false
    else
        tb2.TextColor3 = Color3.new(0, 1, 0)
        SpawnPointsCS = true
        isfalse = true
    end
end)

local tb3 = Instance.new("TextButton")
tb3.Parent = Pro_KingLegacySG
tb3.Size = UDim2.new(0.05, 0, 0.1, 0)
tb3.Position = UDim2.new(0.06, 0, 0.15, 0)
tb3.Text = "Takt"
tb3.Font = SPECIFICS_FONT
tb3.TextScaled = true
tb3.TextColor3 = Color3.new(1, 1, 1)
tb3.BackgroundColor3 = Color3.new(0, 0, 0)
tb3.BackgroundTransparency = 0.5
tb3.Visible = false

tb3.MouseButton1Click:Connect(LvlUPQuest)

local IslandsTP = Instance.new("TextButton")
IslandsTP.Parent = D_Farmer
IslandsTP.BackgroundColor3 = Color3.new(0, 0, 0)
IslandsTP.BackgroundTransparency = 0.5
IslandsTP.Size = UDim2.new(0.8, 0, 0.05, 0)
IslandsTP.TextScaled = true
IslandsTP.Position = UDim2.new(0.1, 0, 0.005, 0)
IslandsTP.TextColor3 = Color3.fromRGB(255, 255, 255)
IslandsTP.Font = SPECIFICS_FONT
IslandsTP.Text = "Next Islands"

local isIslandsTPON = false
IslandsTP.MouseButton1Click:Connect(function()
    if isIslandsTPON then
        IslandsTP.TextColor3 = Color3.fromRGB(255, 255, 255)
        tb2.Visible = false
        tb3.Visible = false
        isIslandsTPON = false
    else
        IslandsTP.TextColor3 = Color3.fromRGB(0, 255, 0)
        tb2.Visible = true
        tb3.Visible = true
        isIslandsTPON = true
    end
end)

local function toDroppedF()
    local allDroppedFruit = game.Workspace:FindFirstChild("AllDroppedFruit")
    local weare = game.Players.LocalPlayer
    local chipx = weare.Character:FindFirstChild("HumanoidRootPart")

    if allDroppedFruit then
        for _, fruit in ipairs(allDroppedFruit:GetChildren()) do
            local handle = fruit:FindFirstChild("Handle")
            if handle then
                handle.Position = chipx.Position
                return
            end
        end
    end
    print("No Fruits Dropped Found !?")
end

local GetFDropped = Instance.new("TextButton")
GetFDropped.Parent = D_Misc
GetFDropped.BackgroundColor3 = Color3.new(0, 0, 0)
GetFDropped.BackgroundTransparency = 0.5
GetFDropped.Size = UDim2.new(0.8, 0, 0.05, 0)
GetFDropped.TextScaled = true
GetFDropped.Position = UDim2.new(0.1, 0, 0.405, 0)
GetFDropped.TextColor3 = Color3.fromRGB(255, 255, 255)
GetFDropped.Font = SPECIFICS_FONT
GetFDropped.Text = "Bring Dropped Fruits"

local IsAutoGetFDropped = false
GetFDropped.MouseButton1Click:Connect(function()
    if IsAutoGetFDropped then
        GetFDropped.TextColor3 = Color3.fromRGB(255, 255, 255)

        IsAutoGetFDropped = false
    else
        GetFDropped.TextColor3 = Color3.fromRGB(0, 255, 0)

        IsAutoGetFDropped = true
        
        while IsAutoGetFDropped do
            toDroppedF()
            wait(0.001)
        end
    end
end)

local function AutoBuyKeyNGacha()
    local currentLPmoney = game:GetService("Players").LocalPlayer and game.Players.LocalPlayer:FindFirstChild("PlayerStats") and game.Players.LocalPlayer.PlayerStats:FindFirstChild("beli") and game.Players.LocalPlayer.PlayerStats.beli.Value or "N/A"
    local setloops_b = false
    if currentLPmoney < 25000 then
        setloops_b = false
        local CoreGui = game:GetService("StarterGui")
        CoreGui:SetCore("SendNotification", {
            Title = "Auto Buy & Gacha [Copper Key]",
            Text = "Automatically Buy & Gacha's: Disable",
            Duration = 1,
        })
    else
        setloops_b = true
        local CoreGui = game:GetService("StarterGui")
        CoreGui:SetCore("SendNotification", {
            Title = "Auto Buy & Gacha [Copper Key]",
            Text = "Automatically Buy & Gacha's: Enable",
            Duration = 1,
        })
    end
    
    if setloops_b then
        local args = {
            [1] = "Copper Key",
            [2] = 1
        }
        
        game:GetService("ReplicatedStorage").Chest.Remotes.Functions.BuyKey:InvokeServer(unpack(args))
        
        wait(0.5)
        
        local args = {
            [1] = "Copper Key",
            [2] = "Open1"
        }
        
        game:GetService("ReplicatedStorage").Chest.Remotes.Functions.UseKey:InvokeServer(unpack(args))
        
        wait(0.5)
    end
end

local B_GKey = Instance.new("TextButton")
B_GKey.Parent = D_Farmer
B_GKey.BackgroundColor3 = Color3.new(0, 0, 0)
B_GKey.BackgroundTransparency = 0.5
B_GKey.Size = UDim2.new(0.8, 0, 0.05, 0)
B_GKey.TextScaled = true
B_GKey.Position = UDim2.new(0.1, 0, 0.085, 0)
B_GKey.TextColor3 = Color3.fromRGB(255, 255, 255)
B_GKey.Font = SPECIFICS_FONT
B_GKey.Text = "Buy and Gacha"

local Is_XPGachaKey = false
B_GKey.MouseButton1Click:Connect(function()
    if Is_XPGachaKey then
        B_GKey.Text = "YES"
        Is_XPGachaKey = false
    else
        B_GKey.Text = "Buy and Gacha"
        Is_XPGachaKey = true
        
        while Is_XPGachaKey do
            AutoBuyKeyNGacha()
            wait(1)
        end
    end
end)

-- Changed Sword Style Animation When It Function Being Called --
local function changedSwordAnims()
    local ourx = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.ScytheStyle.IdleAnim
    local ourc = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.ScytheStyle.RunAnim
    local ourz = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.ScytheStyle.WalkAnim
    local our_1 = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.ScytheStyle.Dash.AnimationF1
    local our_2 = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.ScytheStyle.Dash.AnimationF2
        game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle.IdleAnim:Destroy()
        game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle.RunAnim:Destroy()
        game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle.WalkAnim:Destroy()
        game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle.Dash.AnimationF1:Destroy()
        game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle.Dash.AnimationF2:Destroy()
        wait(0.5)
        ourx.Parent = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle
        ourc.Parent = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle
        ourz.Parent = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle
        our_1.Parent = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle.Dash
        our_2.Parent = game:GetService("ReplicatedStorage").Chest.Animation.CustomWeaponAnims.KatanaStyle.Dash
        wait(0.01)
        print("Successfully Changed Animation of Sword !")
        wait(0.01)
end

changedSwordAnims()
-- Done Here Right Now I Closed It Here --
