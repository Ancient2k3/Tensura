local player = game.Players.LocalPlayer
local screenGuiName = "King_Legacy_UI_Cheat"
local Itsme = game.Players
local ImHere = Itsme.LocalPlayer
local BHRP

for _, gui in ipairs(player:WaitForChild("PlayerGui"):GetChildren()) do
    if gui:IsA("ScreenGui") and gui.Name == screenGuiName then
        gui:Destroy()
    end
end

local KingLegacySG = Instance.new("ScreenGui")
KingLegacySG.Parent = game.CoreGui
KingLegacySG.Name = "King_Legacy_UI_Cheat"

local OPENCLOSEDGUI = Instance.new("TextButton")
local KingLegacyTools = Instance.new("ScrollingFrame")

OPENCLOSEDGUI.Parent = KingLegacySG
OPENCLOSEDGUI.BackgroundColor3 = Color3.new(0, 0, 0)
OPENCLOSEDGUI.BackgroundTransparency = 0.5
OPENCLOSEDGUI.Size = UDim2.new(0.05, 0, 0.1, 0)
OPENCLOSEDGUI.TextScaled = true
OPENCLOSEDGUI.Position = UDim2.new(0.84, 0, -0.1, 0)
OPENCLOSEDGUI.TextColor3 = Color3.new(1, 1, 1)
OPENCLOSEDGUI.Font = Enum.Font.Code
OPENCLOSEDGUI.Text = "×"

local OPENCLOSEDGUICorner = Instance.new("UICorner")
OPENCLOSEDGUICorner.Parent = OPENCLOSEDGUI
OPENCLOSEDGUICorner.CornerRadius = UDim.new(0, 10)

KingLegacyTools.Parent = KingLegacySG
KingLegacyTools.Size = UDim2.new(0.3, 0, 0.1, 0)
KingLegacyTools.Position = UDim2.new(1.2, 0, 0.28, 0)
KingLegacyTools.BackgroundColor3 = Color3.new(0, 0, 0)
KingLegacyTools.BackgroundTransparency = 0.5
KingLegacyTools.CanvasSize = UDim2.new(2, 0, 0, 0)
KingLegacyTools.ScrollBarThickness = 0.1

local KingLegacyToolsCorner = Instance.new("UICorner")
KingLegacyToolsCorner.Parent = KingLegacyTools
KingLegacyToolsCorner.CornerRadius = UDim.new(0.2, 0)

local TweenService = game:GetService("TweenService")
local tweenSpeedd = 1  -- Duration in seconds
local tweenInfo = TweenInfo.new(tweenSpeedd, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

local goalPosition1 = UDim2.new(0.6, 0, 0.28, 0)  -- Move KingLegacyTools
local goalPosition2 = UDim2.new(1.2, 0, 0.28, 0)  -- Original position

local tween1 = TweenService:Create(KingLegacyTools, tweenInfo, {Position = goalPosition1})
local tween2 = TweenService:Create(KingLegacyTools, tweenInfo, {Position = goalPosition2})

local isToggled = false
OPENCLOSEDGUI.MouseButton1Click:Connect(function()
    if isToggled then
        tween2:Play()
        OPENCLOSEDGUI.Text = "+"
        OPENCLOSEDGUI.TextColor3 = Color3.new(0, 1, 0)
    else
        tween1:Play()
        OPENCLOSEDGUI.Text = "×"
        OPENCLOSEDGUI.TextColor3 = Color3.new(1, 1, 1)
    end
    isToggled = not isToggled
end)

-- [[ Now Focus on button inside KingLegacyTools ScrollingFrame ]] --

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local PlayerStatsCheckF = Instance.new("TextButton", SG)
PlayerStatsCheckF.Parent = KingLegacyTools
PlayerStatsCheckF.BackgroundColor3 = Color3.new(0, 0, 0)
PlayerStatsCheckF.BackgroundTransparency = 0.5
PlayerStatsCheckF.Size = UDim2.new(0.03, 0, 0.9, 0)
PlayerStatsCheckF.Position = UDim2.new(0.005, 0, 0, 0)
PlayerStatsCheckF.TextScaled = true
PlayerStatsCheckF.TextColor3 = Color3.new(1, 1, 1)
PlayerStatsCheckF.Font = Enum.Font.PatrickHand
PlayerStatsCheckF.Text = "Data ESP: [OFF]"

local isToggledOn = false
local billboardGuis = {}

local function createBillboardGui(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local head = player.Character:WaitForChild("Head")
    local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude
    local level = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("lvl") and player.PlayerStats.lvl.Value or "N/A"
    local beli = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("beli") and player.PlayerStats.beli.Value or "N/A"
    local devilf = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("DFName") and player.PlayerStats.DFName.Value or "N/A"
    local Fragments = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("Gem") and player.PlayerStats.Gem.Value or "N/A"
    local FStored = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("FruitStore") and player.PlayerStats.FruitStore.Value or "N/A"
    local playersDisplayName = player.DisplayName or "Unknown"
    local username = player.Name

    local billboard = Instance.new("BillboardGui")
    billboard.Size = UDim2.new(0, 200, 0, 120)
    billboard.StudsOffset = Vector3.new(-8, 0, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = head

    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Size = UDim2.new(1, 0, 0, 25)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    distanceLabel.TextStrokeTransparency = 0.5
    distanceLabel.Text = "[Distance:" .. math.floor(distance) .. "m]"
    distanceLabel.TextScaled = false
    distanceLabel.TextSize = 5
    distanceLabel.Parent = billboard

    local levelLabel = Instance.new("TextLabel")
    levelLabel.Size = UDim2.new(1, 0, 0, 25)
    levelLabel.Position = UDim2.new(0, 0, 0, 9)
    levelLabel.BackgroundTransparency = 1
    levelLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    levelLabel.TextStrokeTransparency = 0.5
    levelLabel.Text = "[Level:" .. level .. "]"
    levelLabel.TextScaled = false
    levelLabel.TextSize = 5
    levelLabel.Parent = billboard

    local beliLabel = Instance.new("TextLabel")
    beliLabel.Size = UDim2.new(1, 0, 0, 25)
    beliLabel.Position = UDim2.new(0, 0, 0, 18)
    beliLabel.BackgroundTransparency = 1
    beliLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    beliLabel.TextStrokeTransparency = 0.5
    beliLabel.Text = "[Beli:" .. beli .. "]"
    beliLabel.TextScaled = false
    beliLabel.TextSize = 5
    beliLabel.Parent = billboard

    local devilfLabel = Instance.new("TextLabel")
    devilfLabel.Size = UDim2.new(1, 0, 0, 25)
    devilfLabel.Position = UDim2.new(0, 0, 0, 27)
    devilfLabel.BackgroundTransparency = 1
    devilfLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
    devilfLabel.TextStrokeTransparency = 0.5
    devilfLabel.Text = "[Fruit Used:" .. devilf .. "]"
    devilfLabel.TextScaled = false
    devilfLabel.TextSize = 5
    devilfLabel.Parent = billboard

    local playersLabel = Instance.new("TextLabel")
    playersLabel.Size = UDim2.new(1, 0, 0, 25)
    playersLabel.Position = UDim2.new(0, 0, 0, 36)
    playersLabel.BackgroundTransparency = 1
    playersLabel.TextColor3 = Color3.fromRGB(255, 165, 0)
    playersLabel.TextStrokeTransparency = 0.5
    playersLabel.Text = "[Display Name:" .. playersDisplayName .. "]"
    playersLabel.TextScaled = false
    playersLabel.TextSize = 5
    playersLabel.Parent = billboard

    local userLabel = Instance.new("TextLabel")
    userLabel.Size = UDim2.new(1, 0, 0, 25)
    userLabel.Position = UDim2.new(0, 0, 0, 45)
    userLabel.BackgroundTransparency = 1
    userLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    userLabel.TextStrokeTransparency = 0.5
    userLabel.Text = "[Username:" .. username .. "]"
    userLabel.TextScaled = false
    userLabel.TextSize = 5
    userLabel.Parent = billboard

    local GemLabel = Instance.new("TextLabel")
    GemLabel.Size = UDim2.new(1, 0, 0, 25)
    GemLabel.Position = UDim2.new(0, 0, 0, 54)
    GemLabel.BackgroundTransparency = 1
    GemLabel.TextColor3 = Color3.fromRGB(255, 0, 255)
    GemLabel.TextStrokeTransparency = 0.5
    GemLabel.Text = "[Gem:" .. Fragments .. "]"
    GemLabel.TextScaled = false
    GemLabel.TextSize = 5
    GemLabel.Parent = billboard

    local FSLabel = Instance.new("TextLabel")
    FSLabel.Size = UDim2.new(1, 0, 0, 25)
    FSLabel.Position = UDim2.new(0, 0, 0, 63)
    FSLabel.BackgroundTransparency = 1
    FSLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    FSLabel.TextStrokeTransparency = 0.5
    FSLabel.Text = "[Fruit Stored:" .. FStored .. "]"
    FSLabel.TextScaled = false
    FSLabel.TextSize = 5
    FSLabel.Parent = billboard

    billboardGuis[player.UserId] = {billboard, distanceLabel, levelLabel, beliLabel, devilfLabel, playersLabel, userLabel, GemLabel, FSLabel}
end

local function updateBillboardGui(player)
    if billboardGuis[player.UserId] then
        local billboard, distanceLabel, levelLabel, beliLabel, devilfLabel, playersLabel, userLabel, GemLabel, FSLabel = unpack(billboardGuis[player.UserId])
        
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude
            local level = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("lvl") and player.PlayerStats.lvl.Value or "N/A"
            local beli = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("beli") and player.PlayerStats.beli.Value or "N/A"
            local devilf = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("DFName") and player.PlayerStats.DFName.Value or "N/A"
            local Fragments = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("Gem") and player.PlayerStats.Gem.Value or "N/A"
            local FStored = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("FruitStore") and player.PlayerStats.FruitStore.Value or "N/A"
            local playersDisplayName = player.DisplayName or "Unknown"
            local username = player.Name

            distanceLabel.Text = "[Distance:" .. math.floor(distance) .. "m]"
            levelLabel.Text = "[Level:" .. level .. "]"
            beliLabel.Text = "[Beli:" .. beli .. "]"
            devilfLabel.Text = "[Fruit Used:" .. devilf .. "]"
            GemLabel.Text = "[Gem:" .. Fragments .. "]"
            FSLabel.Text = "[Fruit Stored:" .. FStored .. "]"
            playersLabel.Text = "[Display Name:" .. playersDisplayName .. "]"
            userLabel.Text = "[Username:" .. username .. "]"
        end
    end
end

local function toggleBillboards()
    isToggledOn = not isToggledOn
    PlayerStatsCheckF.Text = isToggledOn and "PlayerStats ESP: [OFF]" or "PlayerStats ESP: [ON]"

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if isToggledOn then
                createBillboardGui(player)
            else
                if billboardGuis[player.UserId] then
                    billboardGuis[player.UserId][1]:Destroy()
                    billboardGuis[player.UserId] = nil
                end
            end
        end
    end
end

PlayerStatsCheckF.MouseButton1Click:Connect(toggleBillboards)

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if isToggledOn then
            createBillboardGui(player)
        end
    end)

    if isToggledOn then
        createBillboardGui(player)
    end
end)

for _, player in ipairs(Players:GetPlayers()) do
    if isToggledOn then
        createBillboardGui(player)
    end
end

task.spawn(function()
    while true do
        wait(0.01)
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                updateBillboardGui(player)
            end
        end
    end
end)

local WalkOnAir = Instance.new("TextButton")
WalkOnAir.Parent = KingLegacyTools
WalkOnAir.BackgroundColor3 = Color3.new(0, 0, 0)
WalkOnAir.BackgroundTransparency = 0.5
WalkOnAir.Size = UDim2.new(0.03, 0, 0.9, 0)
WalkOnAir.TextScaled = true
WalkOnAir.Position = UDim2.new(0.045, 0, 0, 0)
WalkOnAir.TextColor3 = Color3.fromRGB(255, 255, 255)
WalkOnAir.Font = Enum.Font.Code
WalkOnAir.Text = "OnGround"

local isToggled = false
local part

WalkOnAir.MouseButton1Click:Connect(function()
    local player = game.Players.LocalPlayer

    if not isToggled then
        isToggled = true
        WalkOnAir.Text = "On Air/Water"
        WalkOnAir.TextColor3 = Color3.fromRGB(0, 255, 255)

        part = Instance.new("Part")
        part.Size = Vector3.new(20, 0.2, 20)
        part.Position = Vector3.new(
            player.Character.HumanoidRootPart.Position.X,
            player.Character.HumanoidRootPart.Position.Y - 3.5,
            player.Character.HumanoidRootPart.Position.Z
        )
        part.Anchored = true
        part.Transparency = 1
        part.Parent = workspace
        
        local lockedY = part.Position.Y

        local function updatePartPosition()
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                part.Position = Vector3.new(
                    player.Character.HumanoidRootPart.Position.X,
                    lockedY,
                    player.Character.HumanoidRootPart.Position.Z
                )
            end
        end

        local updateConnection
        updateConnection = game:GetService("RunService").Heartbeat:Connect(function()
            if isToggled then
                updatePartPosition()
            else
                updateConnection:Disconnect()
            end
        end)

    else
        isToggled = false
        WalkOnAir.Text = "OnGround"
        WalkOnAir.TextColor3 = Color3.fromRGB(255, 255, 255)
        
        if part then
            part:Destroy()
            part = nil
        end
    end
end)

local SpawnPointsCS = false

local function LvlUPQuest()
    local his = game:GetService("Players").LocalPlayer
    local squareb = his.Character.HumanoidRootPart
    local squareh = his.Character.Humanoid.Health
    local crlvl = his:FindFirstChild("PlayerStats") and his.PlayerStats:FindFirstChild("lvl") and his.PlayerStats.lvl.Value or "N/A"
        if crlvl < 50 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-2053, 17, -4080)
            else
                squareb.CFrame = CFrame.new(-2076, 49, -4557)
            end
        elseif crlvl < 100 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-849, 17, -3193)
            else
                squareb.CFrame = CFrame.new(-686, 52, -3445)
            end
        elseif crlvl < 180 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-2243, 25, -2749)
            else
                squareb.CFrame = CFrame.new(-2420, 49, -2645)
            end
        elseif crlvl < 250 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-865, 24, -1404)
            else
                squareb.CFrame = CFrame.new(-743, 24, -1372)
            end
        elseif crlvl < 400 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-4115, 17, -3044)
            else
                squareb.CFrame = CFrame.new(-4148, 17, -3065)
            end
        elseif crlvl < 525 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-5281, 28, -1458)
            else
                squareb.CFrame = CFrame.new(-5433, 29, -1298)
            end
        elseif crlvl < 800 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-2706, 17, -780)
            else
                squareb.CFrame = CFrame.new(-2743, 41, -751)
            end
        elseif crlvl < 1000 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-4195, 369, 1240)
            else
                squareb.CFrame = CFrame.new(-4320, 385, 1243)
            end
        elseif crlvl < 1200 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(1345, 18, 925)
            else
                squareb.CFrame = CFrame.new(1532, 21, 943)
            end
        elseif crlvl < 1500 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-1298, 12, 1813)
            else
                squareb.CFrame = CFrame.new(-1216, 21, 2106)
            end
        elseif crlvl < 1750 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-2558, 15, 3635)
            else
                squareb.CFrame = CFrame.new(-2809, 19, 4237)
            end
        elseif crlvl < 2000 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(1898, 8, -2013)
            else
                squareb.CFrame = CFrame.new(2272, 55, -1824)
            end
        elseif crlvl < 2250 then
            if not SpawnPointsCS then
                squareb.CFrame = CFrame.new(-1152, 5, 6076)
            else
                squareb.CFrame = CFrame.new(-1716, 40, 6318)
            end
        end
end

local tb2 = Instance.new("TextButton")
tb2.Parent = KingLegacySG
tb2.Size = UDim2.new(0.05, 0, 0.1, 0)
tb2.Position = UDim2.new(0, 0, 0.3, 0)
tb2.Text = "Switch"
tb2.Font = Enum.Font.Code
tb2.TextScaled = true
tb2.TextColor3 = Color3.new(1, 1, 1)
tb2.BackgroundColor3 = Color3.new(0, 0, 0)
tb2.BackgroundTransparency = 0.5
tb2.Visible = false

local isfalse = false
tb2.MouseButton1Click:Connect(function()
    if isfalse then
        tb2.TextColor3 = Color3.new(1, 1, 1)
        SpawnPointsCS = false
        isfalse = false
    else
        tb2.TextColor3 = Color3.new(0, 1, 0)
        SpawnPointsCS = true
        isfalse = true
    end
end)

local tb3 = Instance.new("TextButton")
tb3.Parent = KingLegacySG
tb3.Size = UDim2.new(0.05, 0, 0.1, 0)
tb3.Position = UDim2.new(0.06, 0, 0.3, 0)
tb3.Text = "Takt"
tb3.Font = Enum.Font.Code
tb3.TextScaled = true
tb3.TextColor3 = Color3.new(1, 1, 1)
tb3.BackgroundColor3 = Color3.new(0, 0, 0)
tb3.BackgroundTransparency = 0.5
tb3.Visible = false

tb3.MouseButton1Click:Connect(LvlUPQuest)

local IslandsTP = Instance.new("TextButton")
IslandsTP.Parent = KingLegacyTools
IslandsTP.BackgroundColor3 = Color3.new(0, 0, 0)
IslandsTP.BackgroundTransparency = 0.5
IslandsTP.Size = UDim2.new(0.03, 0, 0.9, 0)
IslandsTP.TextScaled = true
IslandsTP.Position = UDim2.new(0.085, 0, 0, 0)
IslandsTP.TextColor3 = Color3.fromRGB(255, 255, 255)
IslandsTP.Font = Enum.Font.Code
IslandsTP.Text = "Next Islands"

local isIslandsTPON = false
IslandsTP.MouseButton1Click:Connect(function()
    if isIslandsTPON then
        IslandsTP.TextColor3 = Color3.fromRGB(255, 255, 255)
        tb2.Visible = false
        tb3.Visible = false
        isIslandsTPON = false
    else
        IslandsTP.TextColor3 = Color3.fromRGB(0, 255, 0)
        tb2.Visible = true
        tb3.Visible = true
        isIslandsTPON = true
    end
end)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local function findNearestHumanoidRootPart(position)
    local nearestHumanoidRootPart = nil
    local nearestDistance = math.huge
    local playerCharacter = player.Character

    local function searchFolder(folder)
        for _, object in ipairs(folder:GetChildren()) do
            if object:IsA("Model") and object:FindFirstChild("HumanoidRootPart") and object ~= playerCharacter then
                local humanoidRootPart = object.HumanoidRootPart
                local distance = (humanoidRootPart.Position - position).magnitude

                if distance < nearestDistance then
                    nearestDistance = distance
                    nearestHumanoidRootPart = humanoidRootPart
                end
            end

            if object:IsA("Folder") then
                searchFolder(object)
            end
        end
    end

    searchFolder(Workspace)

    return nearestHumanoidRootPart
end

-- Checking Fruits Currently In Use --
local function fruits_abilityfire(nearestHumanoidRootPart)
    local function checkF()
        local player = game:GetService("Players").LocalPlayer
        local backpack = player.Backpack
        local character = player.Character or player.CharacterAdded:Wait()
        local workspaceCharacter = game.Workspace.PlayerCharacters:FindFirstChild(player.Name)

        local function findTool(toolName)
            for _, tool in ipairs(backpack:GetChildren()) do
                if tool:IsA("Tool") and tool.Name == toolName then
                    return true
                end
            end

            for _, tool in ipairs(character:GetChildren()) do
                if tool:IsA("Tool") and tool.Name == toolName then
                    return true
                end
            end
            
            if workspaceCharacter then
                for _, tool in ipairs(workspaceCharacter:GetChildren()) do
                    if tool:IsA("Tool") and tool.Name == toolName then
                        return true
                    end
                end
            end

            return false
        end

        local found = false

        if findTool("SandSand") then
            local args = {
                [1] = "DF_SandSand_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(0, 0, 0)
                }
            }

            ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "DF_SandSand_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(0, 0, 0)
                }
            }

            ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "DF_SandSand_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(0, 0, 0)
                }
            }

            ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "DF_SandSand_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(0, 0, 0)
                }
            }

            ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "DF_SandSand_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(0, 0, 0)
                }
            }

            ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "DF_SandSand_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(0, 0, 0)
                }
            }

            ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)
            found = true
        end

        if findTool("SpiritSpirit") then
            local args = {
                [1] = "DF_SpiritSpirit_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "DF_SpiritSpirit_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "DF_SpiritSpirit_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "DF_SpiritSpirit_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "DF_SpiritSpirit_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "DF_SpiritSpirit_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "DF_SpiritSpirit_B",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "DF_SpiritSpirit_B",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)
            found = true
        end

        if not found then
            print("not found")
        end
    end

    checkF()
end
-- End/Closed/Closing Box --

local Automatically_ComboF = Instance.new("TextButton")
Automatically_ComboF.Parent = KingLegacySG
Automatically_ComboF.Size = UDim2.new(0.05, 0, 0.1, 0)
Automatically_ComboF.Position = UDim2.new(0.15, 0, 0.28, 0)
Automatically_ComboF.Text = "Not Used[Fruits Ability]"
Automatically_ComboF.Font = Enum.Font.Code
Automatically_ComboF.TextScaled = true
Automatically_ComboF.TextColor3 = Color3.new(1, 1, 1)
Automatically_ComboF.BackgroundColor3 = Color3.new(0, 0, 0)
Automatically_ComboF.BackgroundTransparency = 0.5
Automatically_ComboF.Visible = false

local isRunning = false
Automatically_ComboF.MouseButton1Click:Connect(function()
    if isRunning then
        Automatically_ComboF.Text = "Not Used[Fruits Ability]"
        isRunning = false
    else
        Automatically_ComboF.Text = "Use[Fruits Ability]"
        isRunning = true
        
        while isRunning do
            local playerHumanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            local playerPosition = playerHumanoidRootPart and playerHumanoidRootPart.Position

            if playerPosition then
                local nearestHumanoidRootPart = findNearestHumanoidRootPart(playerPosition)

                if nearestHumanoidRootPart then
                    fruits_abilityfire(nearestHumanoidRootPart)
                else
                    fruits_abilityfire(playerHumanoidRootPart)
                end
            else
                print("Player's HumanoidRootPart not found.")
            end
            wait(0.005)
        end
    end
end)

local FCombo_X = Instance.new("TextButton")
FCombo_X.Parent = KingLegacyTools
FCombo_X.BackgroundColor3 = Color3.new(0, 0, 0)
FCombo_X.BackgroundTransparency = 0.5
FCombo_X.Size = UDim2.new(0.03, 0, 0.9, 0)
FCombo_X.TextScaled = true
FCombo_X.Position = UDim2.new(0.125, 0, 0, 0)
FCombo_X.TextColor3 = Color3.fromRGB(255, 255, 255)
FCombo_X.Font = Enum.Font.Code
FCombo_X.Text = "Fast Skill[Fruits]"

local IsAutoFEnable = false
FCombo_X.MouseButton1Click:Connect(function()
    if IsAutoFEnable then
        FCombo_X.TextColor3 = Color3.fromRGB(255, 255, 255)
        Automatically_ComboF.Visible = false
        IsAutoFEnable = false
    else
        FCombo_X.TextColor3 = Color3.fromRGB(0, 255, 0)
        Automatically_ComboF.Visible = true
        IsAutoFEnable = true
    end
end)

-- Checking Fruits Currently In Use --
local function fightingstyle_abilityfire(nearestHumanoidRootPart)
    local function checkFS()
        local player = game:GetService("Players").LocalPlayer
        local backpack = player.Backpack
        local character = player.Character or player.CharacterAdded:Wait()
        local workspaceCharacter = game.Workspace.PlayerCharacters:FindFirstChild(player.Name)

        local function findTool(toolName)
            for _, tool in ipairs(backpack:GetChildren()) do
                if tool:IsA("Tool") and tool.Name == toolName then
                    return true
                end
            end

            for _, tool in ipairs(character:GetChildren()) do
                if tool:IsA("Tool") and tool.Name == toolName then
                    return true
                end
            end
            
            if workspaceCharacter then
                for _, tool in ipairs(workspaceCharacter:GetChildren()) do
                    if tool:IsA("Tool") and tool.Name == toolName then
                        return true
                    end
                end
            end

            return false
        end

        local found = false

        if findTool("DarkLeg") then
            local args = {
                [1] = "FS_DarkLeg_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_DarkLeg_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_DarkLeg_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_DarkLeg_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_DarkLeg_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_DarkLeg_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_DarkLeg_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_DarkLeg_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)
            found = true
        end

        if findTool("DragonClaw") then
            local args = {
                [1] = "FS_DragonClaw_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_DragonClaw_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_DragonClaw_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_DragonClaw_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_DragonClaw_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_DragonClaw_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_DragonClaw_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_DragonClaw_V",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)
            found = true
        end

        if findTool("Cyborg") then
            local args = {
                [1] = "FS_Cyborg_V",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_Cyborg_X",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_Cyborg_X",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_Cyborg_C",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_Cyborg_C",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_Cyborg_E",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)

            local args = {
                [1] = "FS_Cyborg_Z",
                [2] = {
                    ["Type"] = "Down",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "FS_Cyborg_Z",
                [2] = {
                    ["Type"] = "Up",
                    ["MouseHit"] = CFrame.new(nearestHumanoidRootPart.Position) * CFrame.Angles(-0, 0, -0)
                }
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))

            wait(0.01)
        end

        if not found then
            print("not found")
        end
    end

    checkFS()
end
-- End/Closed/Closing Box --

local Automatically_ComboFS = Instance.new("TextButton")
Automatically_ComboFS.Parent = KingLegacySG
Automatically_ComboFS.Size = UDim2.new(0.05, 0, 0.1, 0)
Automatically_ComboFS.Position = UDim2.new(0.20, 0, 0.28, 0)
Automatically_ComboFS.Text = "Not Used[FS Ability]"
Automatically_ComboFS.Font = Enum.Font.Code
Automatically_ComboFS.TextScaled = true
Automatically_ComboFS.TextColor3 = Color3.new(1, 1, 1)
Automatically_ComboFS.BackgroundColor3 = Color3.new(0, 0, 0)
Automatically_ComboFS.BackgroundTransparency = 0.5
Automatically_ComboFS.Visible = false

local isRunning = false
Automatically_ComboFS.MouseButton1Click:Connect(function()
    if isRunning then
        Automatically_ComboFS.Text = "Not Used[FS Ability]"
        isRunning = false
    else
        Automatically_ComboFS.Text = "Use[FS Ability]"
        isRunning = true
        
        while isRunning do
            local playerHumanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            local playerPosition = playerHumanoidRootPart and playerHumanoidRootPart.Position

            if playerPosition then
                local nearestHumanoidRootPart = findNearestHumanoidRootPart(playerPosition)

                if nearestHumanoidRootPart then
                    fightingstyle_abilityfire(nearestHumanoidRootPart)
                else
                    fightingstyle_abilityfire(playerHumanoidRootPart)
                end
            else
                print("Player's HumanoidRootPart not found.")
            end
            wait(0.005)
        end
    end
end)

local FSCombo_X = Instance.new("TextButton")
FSCombo_X.Parent = KingLegacyTools
FSCombo_X.BackgroundColor3 = Color3.new(0, 0, 0)
FSCombo_X.BackgroundTransparency = 0.5
FSCombo_X.Size = UDim2.new(0.03, 0, 0.9, 0)
FSCombo_X.TextScaled = true
FSCombo_X.Position = UDim2.new(0.165, 0, 0, 0)
FSCombo_X.TextColor3 = Color3.fromRGB(255, 255, 255)
FSCombo_X.Font = Enum.Font.Code
FSCombo_X.Text = "Fast Skill[FS]"

local IsAutoFSEnable = false
FSCombo_X.MouseButton1Click:Connect(function()
    if IsAutoFSEnable then
        FSCombo_X.TextColor3 = Color3.fromRGB(255, 255, 255)
        Automatically_ComboFS.Visible = false
        IsAutoFSEnable = false
    else
        FSCombo_X.TextColor3 = Color3.fromRGB(0, 255, 0)
        Automatically_ComboFS.Visible = true
        IsAutoFSEnable = true
    end
end)

local CuteGirl_Gacha = Instance.new("TextButton")
CuteGirl_Gacha.Parent = KingLegacyTools
CuteGirl_Gacha.BackgroundColor3 = Color3.new(0, 0, 0)
CuteGirl_Gacha.BackgroundTransparency = 0.5
CuteGirl_Gacha.Size = UDim2.new(0.03, 0, 0.9, 0)
CuteGirl_Gacha.TextScaled = true
CuteGirl_Gacha.Position = UDim2.new(0.205, 0, 0, 0)
CuteGirl_Gacha.TextColor3 = Color3.fromRGB(255, 255, 255)
CuteGirl_Gacha.Font = Enum.Font.Code
CuteGirl_Gacha.Text = "Gacha"

local IsAutoFSEnable = false
local CopperKeyLeft = 1

CuteGirl_Gacha.MouseButton1Click:Connect(function()
    if IsAutoFSEnable then
        CuteGirl_Gacha.TextColor3 = Color3.fromRGB(255, 255, 255)

        IsAutoFSEnable = false
    else
        CuteGirl_Gacha.TextColor3 = Color3.fromRGB(0, 255, 0)

        IsAutoFSEnable = true
        
        while IsAutoFSEnable do
            local args = {
                [1] = "Copper Key",
                [2] = "Open1"
            }

            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.UseKey:InvokeServer(unpack(args))

            wait(0.5)

            CopperKeyLeft = CopperKeyLeft + 1
            if CopperKeyLeft > 9 then
                CopperKeyLeft = 1
                IsAutoFSEnable = false
                CuteGirl_Gacha.TextColor3 = Color3.fromRGB(255, 255, 255)
            end
            wait(0.01)
        end
    end
end)
